{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Piyush Nimbalkar\\\\Desktop\\\\WDL\\\\salary-sense\\\\client\\\\src\\\\components\\\\common\\\\AnalyticsDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chartConfigs = [{\n  label: \"📊 Salary by Organization Size\",\n  endpoint: \"org-size\"\n}, {\n  label: \"📈 Salary by Experience\",\n  endpoint: \"experience\"\n}, {\n  label: \"🏢 Salary by Work Mode\",\n  endpoint: \"workmode\"\n}, {\n  label: \"🎓 Salary by Education Level\",\n  endpoint: \"education\"\n}, {\n  label: \"🌍 Salary by Region\",\n  endpoint: \"region\"\n}];\n\n// inside AnalyticsDashboard.jsx (or your chosen dashboard)\n\n// import axios from \"axios\";\n\nconst generatePDFReport = async () => {\n  try {\n    const response = await axios.post(\"http://localhost:5000/api/report/generate\", {\n      trendData: {\n        \"Salary by Region\": [{\n          label: \"Asia\",\n          avgSalary: 50000\n        }, {\n          label: \"Europe\",\n          avgSalary: 65000\n        }],\n        \"Salary by Education\": [{\n          label: \"Masters\",\n          avgSalary: 72000\n        }, {\n          label: \"Bachelors\",\n          avgSalary: 60000\n        }]\n      },\n      summaryText: \"Europe leads in average salary.\\nMasters degree gives highest boost.\"\n    });\n    if (response.data.success) {\n      // PDF generated successfully — now trigger download\n      window.open(\"http://localhost:5000/api/report/download\", \"_blank\");\n    } else {\n      alert(\"Failed to generate report\");\n    }\n  } catch (err) {\n    console.error(\"Report generation failed:\", err);\n    alert(\"Error generating PDF report.\");\n  }\n};\nconst AnalyticsDashboard = () => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      for (const config of chartConfigs) {\n        try {\n          const res = await axios.get(`http://localhost:5000/api/trends/${config.endpoint}`);\n          if (res.data.success) {\n            setChartData(prev => ({\n              ...prev,\n              [config.endpoint]: res.data.data\n            }));\n          }\n        } catch (err) {\n          console.error(`❌ Failed to fetch ${config.endpoint}:`, err.message);\n        }\n      }\n    };\n    fetchData();\n  }, []);\n  const renderChart = (endpoint, title) => {\n    const data = chartData[endpoint];\n    if (!data || data.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-10 bg-white dark:bg-gray-800 shadow p-6 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-4 text-gray-800 dark:text-white\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"label\",\n            tick: {\n              fill: \"var(--x-color)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            tick: {\n              fill: \"var(--x-color)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"avgSalary\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadPDF,\n        style: {\n          marginTop: \"20px\",\n          padding: \"10px 20px\",\n          backgroundColor: \"#4f46e5\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\"\n        },\n        children: \"\\uD83D\\uDCC4 Download PDF Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, endpoint, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-gray-100 dark:bg-gray-900 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-8 text-gray-900 dark:text-white\",\n      children: \"\\uD83D\\uDCCA Developer Salary Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), chartConfigs.map(cfg => renderChart(cfg.endpoint, cfg.label))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(AnalyticsDashboard, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = AnalyticsDashboard;\nexport default AnalyticsDashboard;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","CartesianGrid","jsxDEV","_jsxDEV","chartConfigs","label","endpoint","generatePDFReport","response","post","trendData","avgSalary","summaryText","data","success","window","open","alert","err","console","error","AnalyticsDashboard","_s","chartData","setChartData","fetchData","config","res","get","prev","message","renderChart","title","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","tick","fill","onClick","downloadPDF","style","marginTop","padding","backgroundColor","color","border","borderRadius","cursor","map","cfg","_c","$RefreshReg$"],"sources":["C:/Users/Piyush Nimbalkar/Desktop/WDL/salary-sense/client/src/components/common/AnalyticsDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  CartesianGrid,\r\n} from \"recharts\";\r\n\r\nconst chartConfigs = [\r\n  { label: \"📊 Salary by Organization Size\", endpoint: \"org-size\" },\r\n  { label: \"📈 Salary by Experience\", endpoint: \"experience\" },\r\n  { label: \"🏢 Salary by Work Mode\", endpoint: \"workmode\" },\r\n  { label: \"🎓 Salary by Education Level\", endpoint: \"education\" },\r\n  { label: \"🌍 Salary by Region\", endpoint: \"region\" },\r\n];\r\n\r\n// inside AnalyticsDashboard.jsx (or your chosen dashboard)\r\n\r\n// import axios from \"axios\";\r\n\r\nconst generatePDFReport = async () => {\r\n  try {\r\n    const response = await axios.post(\"http://localhost:5000/api/report/generate\", {\r\n      trendData: {\r\n        \"Salary by Region\": [\r\n          { label: \"Asia\", avgSalary: 50000 },\r\n          { label: \"Europe\", avgSalary: 65000 }\r\n        ],\r\n        \"Salary by Education\": [\r\n          { label: \"Masters\", avgSalary: 72000 },\r\n          { label: \"Bachelors\", avgSalary: 60000 }\r\n        ]\r\n      },\r\n      summaryText: \"Europe leads in average salary.\\nMasters degree gives highest boost.\"\r\n    });\r\n\r\n    if (response.data.success) {\r\n      // PDF generated successfully — now trigger download\r\n      window.open(\"http://localhost:5000/api/report/download\", \"_blank\");\r\n    } else {\r\n      alert(\"Failed to generate report\");\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Report generation failed:\", err);\r\n    alert(\"Error generating PDF report.\");\r\n  }\r\n};\r\n\r\n\r\nconst AnalyticsDashboard = () => {\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      for (const config of chartConfigs) {\r\n        try {\r\n          const res = await axios.get(`http://localhost:5000/api/trends/${config.endpoint}`);\r\n          if (res.data.success) {\r\n            setChartData((prev) => ({\r\n              ...prev,\r\n              [config.endpoint]: res.data.data,\r\n            }));\r\n          }\r\n        } catch (err) {\r\n          console.error(`❌ Failed to fetch ${config.endpoint}:`, err.message);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const renderChart = (endpoint, title) => {\r\n    const data = chartData[endpoint];\r\n    if (!data || data.length === 0) return null;\r\n\r\n    return (\r\n      <div key={endpoint} className=\"mb-10 bg-white dark:bg-gray-800 shadow p-6 rounded-lg\">\r\n        <h3 className=\"text-xl font-semibold mb-4 text-gray-800 dark:text-white\">{title}</h3>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <BarChart data={data}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"label\" tick={{ fill: \"var(--x-color)\" }} />\r\n            <YAxis tick={{ fill: \"var(--x-color)\" }} />\r\n            <Tooltip />\r\n            <Bar dataKey=\"avgSalary\" fill=\"#8884d8\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n        <button\r\n  onClick={downloadPDF}\r\n  style={{\r\n    marginTop: \"20px\",\r\n    padding: \"10px 20px\",\r\n    backgroundColor: \"#4f46e5\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    cursor: \"pointer\",\r\n  }}\r\n>\r\n  📄 Download PDF Report\r\n</button>\r\n\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 bg-gray-100 dark:bg-gray-900 min-h-screen\">\r\n      <h2 className=\"text-3xl font-bold mb-8 text-gray-900 dark:text-white\">📊 Developer Salary Insights</h2>\r\n      {chartConfigs.map((cfg) => renderChart(cfg.endpoint, cfg.label))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalyticsDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}