{"ast":null,"code":"import { useAssertWrappedByClerkProvider, useAuth, useIsomorphicClerkContext, withClerk } from \"./chunk-U7L7TR5J.mjs\";\n\n// src/components/controlComponents.tsx\nimport { deprecated } from \"@clerk/shared/deprecated\";\nimport React from \"react\";\n\n// src/contexts/SessionContext.tsx\nimport { SessionContext, useSessionContext } from \"@clerk/shared/react\";\n\n// src/components/controlComponents.tsx\nvar SignedIn = ({\n  children,\n  treatPendingAsSignedOut\n}) => {\n  useAssertWrappedByClerkProvider(\"SignedIn\");\n  const {\n    userId\n  } = useAuth({\n    treatPendingAsSignedOut\n  });\n  if (userId) {\n    return children;\n  }\n  return null;\n};\nvar SignedOut = ({\n  children,\n  treatPendingAsSignedOut\n}) => {\n  useAssertWrappedByClerkProvider(\"SignedOut\");\n  const {\n    userId\n  } = useAuth({\n    treatPendingAsSignedOut\n  });\n  if (userId === null) {\n    return children;\n  }\n  return null;\n};\nvar ClerkLoaded = ({\n  children\n}) => {\n  useAssertWrappedByClerkProvider(\"ClerkLoaded\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (!isomorphicClerk.loaded) {\n    return null;\n  }\n  return children;\n};\nvar ClerkLoading = ({\n  children\n}) => {\n  useAssertWrappedByClerkProvider(\"ClerkLoading\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.status !== \"loading\") {\n    return null;\n  }\n  return children;\n};\nvar ClerkFailed = ({\n  children\n}) => {\n  useAssertWrappedByClerkProvider(\"ClerkFailed\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.status !== \"error\") {\n    return null;\n  }\n  return children;\n};\nvar ClerkDegraded = ({\n  children\n}) => {\n  useAssertWrappedByClerkProvider(\"ClerkDegraded\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.status !== \"degraded\") {\n    return null;\n  }\n  return children;\n};\nvar Protect = ({\n  children,\n  fallback,\n  treatPendingAsSignedOut,\n  ...restAuthorizedParams\n}) => {\n  useAssertWrappedByClerkProvider(\"Protect\");\n  const {\n    isLoaded,\n    has,\n    userId\n  } = useAuth({\n    treatPendingAsSignedOut\n  });\n  if (!isLoaded) {\n    return null;\n  }\n  const unauthorized = fallback != null ? fallback : null;\n  const authorized = children;\n  if (!userId) {\n    return unauthorized;\n  }\n  if (typeof restAuthorizedParams.condition === \"function\") {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n  if (restAuthorizedParams.role || restAuthorizedParams.permission || restAuthorizedParams.feature || restAuthorizedParams.plan) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n  return authorized;\n};\nvar RedirectToSignIn = withClerk(({\n  clerk,\n  ...props\n}) => {\n  const {\n    client,\n    session\n  } = clerk;\n  const hasSignedInSessions = client.signedInSessions ? client.signedInSessions.length > 0 :\n  // Compat for clerk-js<5.54.0 (which was released with the `signedInSessions` property)\n  client.activeSessions && client.activeSessions.length > 0;\n  React.useEffect(() => {\n    if (session === null && hasSignedInSessions) {\n      void clerk.redirectToAfterSignOut();\n    } else {\n      void clerk.redirectToSignIn(props);\n    }\n  }, []);\n  return null;\n}, \"RedirectToSignIn\");\nvar RedirectToSignUp = withClerk(({\n  clerk,\n  ...props\n}) => {\n  React.useEffect(() => {\n    void clerk.redirectToSignUp(props);\n  }, []);\n  return null;\n}, \"RedirectToSignUp\");\nvar RedirectToTask = withClerk(({\n  clerk\n}) => {\n  const {\n    session\n  } = clerk;\n  React.useEffect(() => {\n    if (!session) {\n      void clerk.redirectToSignIn();\n      return;\n    }\n    void clerk.__internal_navigateToTaskIfAvailable();\n  }, []);\n  return null;\n}, \"RedirectToTask\");\nvar RedirectToUserProfile = withClerk(({\n  clerk\n}) => {\n  React.useEffect(() => {\n    deprecated(\"RedirectToUserProfile\", \"Use the `redirectToUserProfile()` method instead.\");\n    void clerk.redirectToUserProfile();\n  }, []);\n  return null;\n}, \"RedirectToUserProfile\");\nvar RedirectToOrganizationProfile = withClerk(({\n  clerk\n}) => {\n  React.useEffect(() => {\n    deprecated(\"RedirectToOrganizationProfile\", \"Use the `redirectToOrganizationProfile()` method instead.\");\n    void clerk.redirectToOrganizationProfile();\n  }, []);\n  return null;\n}, \"RedirectToOrganizationProfile\");\nvar RedirectToCreateOrganization = withClerk(({\n  clerk\n}) => {\n  React.useEffect(() => {\n    deprecated(\"RedirectToCreateOrganization\", \"Use the `redirectToCreateOrganization()` method instead.\");\n    void clerk.redirectToCreateOrganization();\n  }, []);\n  return null;\n}, \"RedirectToCreateOrganization\");\nvar AuthenticateWithRedirectCallback = withClerk(({\n  clerk,\n  ...handleRedirectCallbackParams\n}) => {\n  React.useEffect(() => {\n    void clerk.handleRedirectCallback(handleRedirectCallbackParams);\n  }, []);\n  return null;\n}, \"AuthenticateWithRedirectCallback\");\nvar MultisessionAppSupport = ({\n  children\n}) => {\n  useAssertWrappedByClerkProvider(\"MultisessionAppSupport\");\n  const session = useSessionContext();\n  return /* @__PURE__ */React.createElement(React.Fragment, {\n    key: session ? session.id : \"no-users\"\n  }, children);\n};\nexport { SignedIn, SignedOut, ClerkLoaded, ClerkLoading, ClerkFailed, ClerkDegraded, Protect, RedirectToSignIn, RedirectToSignUp, RedirectToTask, RedirectToUserProfile, RedirectToOrganizationProfile, RedirectToCreateOrganization, AuthenticateWithRedirectCallback, MultisessionAppSupport };","map":{"version":3,"names":["deprecated","React","SessionContext","useSessionContext","SignedIn","children","treatPendingAsSignedOut","useAssertWrappedByClerkProvider","userId","useAuth","SignedOut","ClerkLoaded","isomorphicClerk","useIsomorphicClerkContext","loaded","ClerkLoading","status","ClerkFailed","ClerkDegraded","Protect","fallback","restAuthorizedParams","isLoaded","has","unauthorized","authorized","condition","role","permission","feature","plan","RedirectToSignIn","withClerk","clerk","props","client","session","hasSignedInSessions","signedInSessions","length","activeSessions","useEffect","redirectToAfterSignOut","redirectToSignIn","RedirectToSignUp","redirectToSignUp","RedirectToTask","__internal_navigateToTaskIfAvailable","RedirectToUserProfile","redirectToUserProfile","RedirectToOrganizationProfile","redirectToOrganizationProfile","RedirectToCreateOrganization","redirectToCreateOrganization","AuthenticateWithRedirectCallback","handleRedirectCallbackParams","handleRedirectCallback","MultisessionAppSupport","createElement","Fragment","key","id"],"sources":["C:\\Users\\Piyush Nimbalkar\\Desktop\\WDL\\salary-sense\\client\\node_modules\\@clerk\\clerk-react\\src\\components\\controlComponents.tsx","C:\\Users\\Piyush Nimbalkar\\Desktop\\WDL\\salary-sense\\client\\node_modules\\@clerk\\clerk-react\\src\\contexts\\SessionContext.tsx"],"sourcesContent":["import { deprecated } from '@clerk/shared/deprecated';\nimport type { HandleOAuthCallbackParams, PendingSessionOptions, ProtectProps as _ProtectProps } from '@clerk/types';\nimport React from 'react';\n\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { useSessionContext } from '../contexts/SessionContext';\nimport { useAuth } from '../hooks';\nimport { useAssertWrappedByClerkProvider } from '../hooks/useAssertWrappedByClerkProvider';\nimport type { RedirectToSignInProps, RedirectToSignUpProps, WithClerkProp } from '../types';\nimport { withClerk } from './withClerk';\n\nexport const SignedIn = ({ children, treatPendingAsSignedOut }: React.PropsWithChildren<PendingSessionOptions>) => {\n  useAssertWrappedByClerkProvider('SignedIn');\n\n  const { userId } = useAuth({ treatPendingAsSignedOut });\n  if (userId) {\n    return children;\n  }\n  return null;\n};\n\nexport const SignedOut = ({ children, treatPendingAsSignedOut }: React.PropsWithChildren<PendingSessionOptions>) => {\n  useAssertWrappedByClerkProvider('SignedOut');\n\n  const { userId } = useAuth({ treatPendingAsSignedOut });\n  if (userId === null) {\n    return children;\n  }\n  return null;\n};\n\nexport const ClerkLoaded = ({ children }: React.PropsWithChildren<unknown>) => {\n  useAssertWrappedByClerkProvider('ClerkLoaded');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (!isomorphicClerk.loaded) {\n    return null;\n  }\n  return children;\n};\n\nexport const ClerkLoading = ({ children }: React.PropsWithChildren<unknown>) => {\n  useAssertWrappedByClerkProvider('ClerkLoading');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.status !== 'loading') {\n    return null;\n  }\n  return children;\n};\n\nexport const ClerkFailed = ({ children }: React.PropsWithChildren<unknown>) => {\n  useAssertWrappedByClerkProvider('ClerkFailed');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.status !== 'error') {\n    return null;\n  }\n  return children;\n};\n\nexport const ClerkDegraded = ({ children }: React.PropsWithChildren<unknown>) => {\n  useAssertWrappedByClerkProvider('ClerkDegraded');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.status !== 'degraded') {\n    return null;\n  }\n  return children;\n};\n\nexport type ProtectProps = React.PropsWithChildren<\n  _ProtectProps & {\n    fallback?: React.ReactNode;\n  } & PendingSessionOptions\n>;\n\n/**\n * Use `<Protect/>` in order to prevent unauthenticated or unauthorized users from accessing the children passed to the component.\n *\n * Examples:\n * ```\n * <Protect permission=\"a_permission_key\" />\n * <Protect role=\"a_role_key\" />\n * <Protect condition={(has) => has({permission:\"a_permission_key\"})} />\n * <Protect condition={(has) => has({role:\"a_role_key\"})} />\n * <Protect fallback={<p>Unauthorized</p>} />\n * ```\n */\nexport const Protect = ({ children, fallback, treatPendingAsSignedOut, ...restAuthorizedParams }: ProtectProps) => {\n  useAssertWrappedByClerkProvider('Protect');\n\n  const { isLoaded, has, userId } = useAuth({ treatPendingAsSignedOut });\n\n  /**\n   * Avoid flickering children or fallback while clerk is loading sessionId or userId\n   */\n  if (!isLoaded) {\n    return null;\n  }\n\n  /**\n   * Fallback to UI provided by user or `null` if authorization checks failed\n   */\n  const unauthorized = fallback ?? null;\n\n  const authorized = children;\n\n  if (!userId) {\n    return unauthorized;\n  }\n\n  /**\n   * Check against the results of `has` called inside the callback\n   */\n  if (typeof restAuthorizedParams.condition === 'function') {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  if (\n    restAuthorizedParams.role ||\n    restAuthorizedParams.permission ||\n    restAuthorizedParams.feature ||\n    restAuthorizedParams.plan\n  ) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  /**\n   * If neither of the authorization params are passed behave as the `<SignedIn/>`.\n   * If fallback is present render that instead of rendering nothing.\n   */\n  return authorized;\n};\n\nexport const RedirectToSignIn = withClerk(({ clerk, ...props }: WithClerkProp<RedirectToSignInProps>) => {\n  const { client, session } = clerk;\n\n  const hasSignedInSessions = client.signedInSessions\n    ? client.signedInSessions.length > 0\n    : // Compat for clerk-js<5.54.0 (which was released with the `signedInSessions` property)\n      client.activeSessions && client.activeSessions.length > 0;\n\n  React.useEffect(() => {\n    if (session === null && hasSignedInSessions) {\n      void clerk.redirectToAfterSignOut();\n    } else {\n      void clerk.redirectToSignIn(props);\n    }\n  }, []);\n\n  return null;\n}, 'RedirectToSignIn');\n\nexport const RedirectToSignUp = withClerk(({ clerk, ...props }: WithClerkProp<RedirectToSignUpProps>) => {\n  React.useEffect(() => {\n    void clerk.redirectToSignUp(props);\n  }, []);\n\n  return null;\n}, 'RedirectToSignUp');\n\nexport const RedirectToTask = withClerk(({ clerk }: WithClerkProp) => {\n  const { session } = clerk;\n\n  React.useEffect(() => {\n    if (!session) {\n      void clerk.redirectToSignIn();\n      return;\n    }\n\n    void clerk.__internal_navigateToTaskIfAvailable();\n  }, []);\n\n  return null;\n}, 'RedirectToTask');\n\n/**\n * @function\n * @deprecated Use [`redirectToUserProfile()`](https://clerk.com/docs/references/javascript/clerk#redirect-to-user-profile) instead.\n */\nexport const RedirectToUserProfile = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    deprecated('RedirectToUserProfile', 'Use the `redirectToUserProfile()` method instead.');\n    void clerk.redirectToUserProfile();\n  }, []);\n\n  return null;\n}, 'RedirectToUserProfile');\n\n/**\n * @function\n * @deprecated Use [`redirectToOrganizationProfile()`](https://clerk.com/docs/references/javascript/clerk#redirect-to-organization-profile) instead.\n */\nexport const RedirectToOrganizationProfile = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    deprecated('RedirectToOrganizationProfile', 'Use the `redirectToOrganizationProfile()` method instead.');\n    void clerk.redirectToOrganizationProfile();\n  }, []);\n\n  return null;\n}, 'RedirectToOrganizationProfile');\n\n/**\n * @function\n * @deprecated Use [`redirectToCreateOrganization()`](https://clerk.com/docs/references/javascript/clerk#redirect-to-create-organization) instead.\n */\nexport const RedirectToCreateOrganization = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    deprecated('RedirectToCreateOrganization', 'Use the `redirectToCreateOrganization()` method instead.');\n    void clerk.redirectToCreateOrganization();\n  }, []);\n\n  return null;\n}, 'RedirectToCreateOrganization');\n\nexport const AuthenticateWithRedirectCallback = withClerk(\n  ({ clerk, ...handleRedirectCallbackParams }: WithClerkProp<HandleOAuthCallbackParams>) => {\n    React.useEffect(() => {\n      void clerk.handleRedirectCallback(handleRedirectCallbackParams);\n    }, []);\n\n    return null;\n  },\n  'AuthenticateWithRedirectCallback',\n);\n\nexport const MultisessionAppSupport = ({ children }: React.PropsWithChildren<unknown>) => {\n  useAssertWrappedByClerkProvider('MultisessionAppSupport');\n\n  const session = useSessionContext();\n  return <React.Fragment key={session ? session.id : 'no-users'}>{children}</React.Fragment>;\n};\n","export { SessionContext, useSessionContext } from '@clerk/shared/react';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}