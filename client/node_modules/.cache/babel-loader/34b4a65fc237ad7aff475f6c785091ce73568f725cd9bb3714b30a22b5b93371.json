{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Piyush Nimbalkar\\\\Desktop\\\\WDL\\\\salary-sense\\\\client\\\\src\\\\components\\\\recruiter\\\\SalaryCharts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\n\n// Chart configuration for each endpoint and chart\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chartConfigs = [{\n  label: \"Salary by Organization Size\",\n  endpoint: \"org-size\",\n  dataKey: \"label\"\n}, {\n  label: \"Salary by Experience (Years)\",\n  endpoint: \"experience\",\n  dataKey: \"label\"\n}, {\n  label: \"Remote vs On-site\",\n  endpoint: \"workmode\",\n  dataKey: \"label\"\n}, {\n  label: \"Salary by Education\",\n  endpoint: \"education\",\n  dataKey: \"label\"\n}, {\n  label: \"Salary by Region\",\n  endpoint: \"region\",\n  dataKey: \"label\"\n}];\nconst SalaryCharts = () => {\n  _s();\n  const [chartsData, setChartsData] = useState({});\n  useEffect(() => {\n    chartConfigs.forEach(async config => {\n      try {\n        const res = await axios.get(`http://localhost:5000/api/trends/${config.endpoint}`);\n        if (res.data.success) {\n          setChartsData(prev => ({\n            ...prev,\n            [config.endpoint]: res.data.data\n          }));\n        }\n      } catch (err) {\n        console.error(`❌ Failed to fetch ${config.endpoint}:`, err.message);\n      }\n    });\n  }, []);\n  const renderChart = ({\n    label,\n    endpoint,\n    dataKey\n  }) => {\n    const data = chartsData[endpoint];\n    if (!data || data.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: data,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 0,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: dataKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"avgSalary\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, endpoint, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"\\uD83D\\uDCCA Salary Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), chartConfigs.map(renderChart)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(SalaryCharts, \"Cgk4XeTno3rIPBvuxNa1B3FcOpU=\");\n_c = SalaryCharts;\nexport default SalaryCharts;\nvar _c;\n$RefreshReg$(_c, \"SalaryCharts\");","map":{"version":3,"names":["React","useEffect","useState","axios","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","chartConfigs","label","endpoint","dataKey","SalaryCharts","_s","chartsData","setChartsData","forEach","config","res","get","data","success","prev","err","console","error","message","renderChart","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","fill","map","_c","$RefreshReg$"],"sources":["C:/Users/Piyush Nimbalkar/Desktop/WDL/salary-sense/client/src/components/recruiter/SalaryCharts.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\n// Chart configuration for each endpoint and chart\r\nconst chartConfigs = [\r\n  { label: \"Salary by Organization Size\", endpoint: \"org-size\", dataKey: \"label\" },\r\n  { label: \"Salary by Experience (Years)\", endpoint: \"experience\", dataKey: \"label\" },\r\n  { label: \"Remote vs On-site\", endpoint: \"workmode\", dataKey: \"label\" },\r\n  { label: \"Salary by Education\", endpoint: \"education\", dataKey: \"label\" },\r\n  { label: \"Salary by Region\", endpoint: \"region\", dataKey: \"label\" },\r\n];\r\n\r\nconst SalaryCharts = () => {\r\n  const [chartsData, setChartsData] = useState({});\r\n\r\n  useEffect(() => {\r\n    chartConfigs.forEach(async (config) => {\r\n      try {\r\n        const res = await axios.get(`http://localhost:5000/api/trends/${config.endpoint}`);\r\n        if (res.data.success) {\r\n          setChartsData((prev) => ({ ...prev, [config.endpoint]: res.data.data }));\r\n        }\r\n      } catch (err) {\r\n        console.error(`❌ Failed to fetch ${config.endpoint}:`, err.message);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const renderChart = ({ label, endpoint, dataKey }) => {\r\n    const data = chartsData[endpoint];\r\n    if (!data || data.length === 0) return null;\r\n\r\n    return (\r\n      <div key={endpoint} className=\"mb-10\">\r\n        <h3 className=\"text-xl font-semibold mb-2\">{label}</h3>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <BarChart data={data} margin={{ top: 20, right: 30, left: 0, bottom: 5 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey={dataKey} />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Bar dataKey=\"avgSalary\" fill=\"#8884d8\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">📊 Salary Insights</h2>\r\n      {chartConfigs.map(renderChart)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalaryCharts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}