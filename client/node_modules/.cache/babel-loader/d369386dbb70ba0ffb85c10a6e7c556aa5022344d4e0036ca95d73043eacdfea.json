{"ast":null,"code":"import { customLinkWrongProps, customMenuItemsIgnoredComponent, customPageWrongProps, customPagesIgnoredComponent, errorThrower, multipleChildrenInButtonComponent, organizationProfileLinkRenderedError, organizationProfilePageRenderedError, userButtonIgnoredComponent, userButtonMenuActionRenderedError, userButtonMenuItemLinkWrongProps, userButtonMenuItemsActionWrongsProps, userButtonMenuItemsRenderedError, userButtonMenuLinkRenderedError, userProfileLinkRenderedError, userProfilePageRenderedError, withClerk } from \"./chunk-U7L7TR5J.mjs\";\n\n// src/components/uiComponents.tsx\nimport { logErrorInDevMode as logErrorInDevMode3 } from \"@clerk/shared/utils\";\nimport React7, { createContext, createElement, useContext } from \"react\";\n\n// src/utils/childrenUtils.tsx\nimport React from \"react\";\nvar assertSingleChild = children => name => {\n  try {\n    return React.Children.only(children);\n  } catch {\n    return errorThrower.throw(multipleChildrenInButtonComponent(name));\n  }\n};\nvar normalizeWithDefaultValue = (children, defaultText) => {\n  if (!children) {\n    children = defaultText;\n  }\n  if (typeof children === \"string\") {\n    children = /* @__PURE__ */React.createElement(\"button\", null, children);\n  }\n  return children;\n};\nvar safeExecute = cb => (...args) => {\n  if (cb && typeof cb === \"function\") {\n    return cb(...args);\n  }\n};\n\n// src/utils/isConstructor.ts\nfunction isConstructor(f) {\n  return typeof f === \"function\";\n}\n\n// src/utils/useMaxAllowedInstancesGuard.tsx\nimport React2 from \"react\";\nvar counts = /* @__PURE__ */new Map();\nfunction useMaxAllowedInstancesGuard(name, error, maxCount = 1) {\n  React2.useEffect(() => {\n    const count = counts.get(name) || 0;\n    if (count == maxCount) {\n      return errorThrower.throw(error);\n    }\n    counts.set(name, count + 1);\n    return () => {\n      counts.set(name, (counts.get(name) || 1) - 1);\n    };\n  }, []);\n}\nfunction withMaxAllowedInstancesGuard(WrappedComponent, name, error) {\n  const displayName = WrappedComponent.displayName || WrappedComponent.name || name || \"Component\";\n  const Hoc = props => {\n    useMaxAllowedInstancesGuard(name, error);\n    return /* @__PURE__ */React2.createElement(WrappedComponent, {\n      ...props\n    });\n  };\n  Hoc.displayName = `withMaxAllowedInstancesGuard(${displayName})`;\n  return Hoc;\n}\n\n// src/utils/useCustomElementPortal.tsx\nimport { useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nvar useCustomElementPortal = elements => {\n  const [nodeMap, setNodeMap] = useState(/* @__PURE__ */new Map());\n  return elements.map(el => ({\n    id: el.id,\n    mount: node => setNodeMap(prev => new Map(prev).set(String(el.id), node)),\n    unmount: () => setNodeMap(prev => {\n      const newMap = new Map(prev);\n      newMap.set(String(el.id), null);\n      return newMap;\n    }),\n    portal: () => {\n      const node = nodeMap.get(String(el.id));\n      return node ? createPortal(el.component, node) : null;\n    }\n  }));\n};\n\n// src/utils/useCustomPages.tsx\nimport { logErrorInDevMode } from \"@clerk/shared/utils\";\nimport React4 from \"react\";\n\n// src/utils/componentValidation.ts\nimport React3 from \"react\";\nvar isThatComponent = (v, component) => {\n  return !!v && React3.isValidElement(v) && (v == null ? void 0 : v.type) === component;\n};\n\n// src/utils/useCustomPages.tsx\nvar useUserProfileCustomPages = (children, options) => {\n  const reorderItemsLabels = [\"account\", \"security\"];\n  return useCustomPages({\n    children,\n    reorderItemsLabels,\n    LinkComponent: UserProfileLink,\n    PageComponent: UserProfilePage,\n    MenuItemsComponent: MenuItems,\n    componentName: \"UserProfile\"\n  }, options);\n};\nvar useOrganizationProfileCustomPages = (children, options) => {\n  const reorderItemsLabels = [\"general\", \"members\"];\n  return useCustomPages({\n    children,\n    reorderItemsLabels,\n    LinkComponent: OrganizationProfileLink,\n    PageComponent: OrganizationProfilePage,\n    componentName: \"OrganizationProfile\"\n  }, options);\n};\nvar useSanitizedChildren = children => {\n  const sanitizedChildren = [];\n  const excludedComponents = [OrganizationProfileLink, OrganizationProfilePage, MenuItems, UserProfilePage, UserProfileLink];\n  React4.Children.forEach(children, child => {\n    if (!excludedComponents.some(component => isThatComponent(child, component))) {\n      sanitizedChildren.push(child);\n    }\n  });\n  return sanitizedChildren;\n};\nvar useCustomPages = (params, options) => {\n  const {\n    children,\n    LinkComponent,\n    PageComponent,\n    MenuItemsComponent,\n    reorderItemsLabels,\n    componentName\n  } = params;\n  const {\n    allowForAnyChildren = false\n  } = options || {};\n  const validChildren = [];\n  React4.Children.forEach(children, child => {\n    if (!isThatComponent(child, PageComponent) && !isThatComponent(child, LinkComponent) && !isThatComponent(child, MenuItemsComponent)) {\n      if (child && !allowForAnyChildren) {\n        logErrorInDevMode(customPagesIgnoredComponent(componentName));\n      }\n      return;\n    }\n    const {\n      props\n    } = child;\n    const {\n      children: children2,\n      label,\n      url,\n      labelIcon\n    } = props;\n    if (isThatComponent(child, PageComponent)) {\n      if (isReorderItem(props, reorderItemsLabels)) {\n        validChildren.push({\n          label\n        });\n      } else if (isCustomPage(props)) {\n        validChildren.push({\n          label,\n          labelIcon,\n          children: children2,\n          url\n        });\n      } else {\n        logErrorInDevMode(customPageWrongProps(componentName));\n        return;\n      }\n    }\n    if (isThatComponent(child, LinkComponent)) {\n      if (isExternalLink(props)) {\n        validChildren.push({\n          label,\n          labelIcon,\n          url\n        });\n      } else {\n        logErrorInDevMode(customLinkWrongProps(componentName));\n        return;\n      }\n    }\n  });\n  const customPageContents = [];\n  const customPageLabelIcons = [];\n  const customLinkLabelIcons = [];\n  validChildren.forEach((cp, index) => {\n    if (isCustomPage(cp)) {\n      customPageContents.push({\n        component: cp.children,\n        id: index\n      });\n      customPageLabelIcons.push({\n        component: cp.labelIcon,\n        id: index\n      });\n      return;\n    }\n    if (isExternalLink(cp)) {\n      customLinkLabelIcons.push({\n        component: cp.labelIcon,\n        id: index\n      });\n    }\n  });\n  const customPageContentsPortals = useCustomElementPortal(customPageContents);\n  const customPageLabelIconsPortals = useCustomElementPortal(customPageLabelIcons);\n  const customLinkLabelIconsPortals = useCustomElementPortal(customLinkLabelIcons);\n  const customPages = [];\n  const customPagesPortals = [];\n  validChildren.forEach((cp, index) => {\n    if (isReorderItem(cp, reorderItemsLabels)) {\n      customPages.push({\n        label: cp.label\n      });\n      return;\n    }\n    if (isCustomPage(cp)) {\n      const {\n        portal: contentPortal,\n        mount,\n        unmount\n      } = customPageContentsPortals.find(p => p.id === index);\n      const {\n        portal: labelPortal,\n        mount: mountIcon,\n        unmount: unmountIcon\n      } = customPageLabelIconsPortals.find(p => p.id === index);\n      customPages.push({\n        label: cp.label,\n        url: cp.url,\n        mount,\n        unmount,\n        mountIcon,\n        unmountIcon\n      });\n      customPagesPortals.push(contentPortal);\n      customPagesPortals.push(labelPortal);\n      return;\n    }\n    if (isExternalLink(cp)) {\n      const {\n        portal: labelPortal,\n        mount: mountIcon,\n        unmount: unmountIcon\n      } = customLinkLabelIconsPortals.find(p => p.id === index);\n      customPages.push({\n        label: cp.label,\n        url: cp.url,\n        mountIcon,\n        unmountIcon\n      });\n      customPagesPortals.push(labelPortal);\n      return;\n    }\n  });\n  return {\n    customPages,\n    customPagesPortals\n  };\n};\nvar isReorderItem = (childProps, validItems) => {\n  const {\n    children,\n    label,\n    url,\n    labelIcon\n  } = childProps;\n  return !children && !url && !labelIcon && validItems.some(v => v === label);\n};\nvar isCustomPage = childProps => {\n  const {\n    children,\n    label,\n    url,\n    labelIcon\n  } = childProps;\n  return !!children && !!url && !!labelIcon && !!label;\n};\nvar isExternalLink = childProps => {\n  const {\n    children,\n    label,\n    url,\n    labelIcon\n  } = childProps;\n  return !children && !!url && !!labelIcon && !!label;\n};\n\n// src/utils/useCustomMenuItems.tsx\nimport { logErrorInDevMode as logErrorInDevMode2 } from \"@clerk/shared/utils\";\nimport React5 from \"react\";\nvar useUserButtonCustomMenuItems = children => {\n  const reorderItemsLabels = [\"manageAccount\", \"signOut\"];\n  return useCustomMenuItems({\n    children,\n    reorderItemsLabels,\n    MenuItemsComponent: MenuItems,\n    MenuActionComponent: MenuAction,\n    MenuLinkComponent: MenuLink,\n    UserProfileLinkComponent: UserProfileLink,\n    UserProfilePageComponent: UserProfilePage\n  });\n};\nvar useCustomMenuItems = ({\n  children,\n  MenuItemsComponent,\n  MenuActionComponent,\n  MenuLinkComponent,\n  UserProfileLinkComponent,\n  UserProfilePageComponent,\n  reorderItemsLabels\n}) => {\n  const validChildren = [];\n  const customMenuItems = [];\n  const customMenuItemsPortals = [];\n  React5.Children.forEach(children, child => {\n    if (!isThatComponent(child, MenuItemsComponent) && !isThatComponent(child, UserProfileLinkComponent) && !isThatComponent(child, UserProfilePageComponent)) {\n      if (child) {\n        logErrorInDevMode2(userButtonIgnoredComponent);\n      }\n      return;\n    }\n    if (isThatComponent(child, UserProfileLinkComponent) || isThatComponent(child, UserProfilePageComponent)) {\n      return;\n    }\n    const {\n      props\n    } = child;\n    React5.Children.forEach(props.children, child2 => {\n      if (!isThatComponent(child2, MenuActionComponent) && !isThatComponent(child2, MenuLinkComponent)) {\n        if (child2) {\n          logErrorInDevMode2(customMenuItemsIgnoredComponent);\n        }\n        return;\n      }\n      const {\n        props: props2\n      } = child2;\n      const {\n        label,\n        labelIcon,\n        href,\n        onClick,\n        open\n      } = props2;\n      if (isThatComponent(child2, MenuActionComponent)) {\n        if (isReorderItem2(props2, reorderItemsLabels)) {\n          validChildren.push({\n            label\n          });\n        } else if (isCustomMenuItem(props2)) {\n          const baseItem = {\n            label,\n            labelIcon\n          };\n          if (onClick !== void 0) {\n            validChildren.push({\n              ...baseItem,\n              onClick\n            });\n          } else if (open !== void 0) {\n            validChildren.push({\n              ...baseItem,\n              open: open.startsWith(\"/\") ? open : `/${open}`\n            });\n          } else {\n            logErrorInDevMode2(\"Custom menu item must have either onClick or open property\");\n            return;\n          }\n        } else {\n          logErrorInDevMode2(userButtonMenuItemsActionWrongsProps);\n          return;\n        }\n      }\n      if (isThatComponent(child2, MenuLinkComponent)) {\n        if (isExternalLink2(props2)) {\n          validChildren.push({\n            label,\n            labelIcon,\n            href\n          });\n        } else {\n          logErrorInDevMode2(userButtonMenuItemLinkWrongProps);\n          return;\n        }\n      }\n    });\n  });\n  const customMenuItemLabelIcons = [];\n  const customLinkLabelIcons = [];\n  validChildren.forEach((mi, index) => {\n    if (isCustomMenuItem(mi)) {\n      customMenuItemLabelIcons.push({\n        component: mi.labelIcon,\n        id: index\n      });\n    }\n    if (isExternalLink2(mi)) {\n      customLinkLabelIcons.push({\n        component: mi.labelIcon,\n        id: index\n      });\n    }\n  });\n  const customMenuItemLabelIconsPortals = useCustomElementPortal(customMenuItemLabelIcons);\n  const customLinkLabelIconsPortals = useCustomElementPortal(customLinkLabelIcons);\n  validChildren.forEach((mi, index) => {\n    if (isReorderItem2(mi, reorderItemsLabels)) {\n      customMenuItems.push({\n        label: mi.label\n      });\n    }\n    if (isCustomMenuItem(mi)) {\n      const {\n        portal: iconPortal,\n        mount: mountIcon,\n        unmount: unmountIcon\n      } = customMenuItemLabelIconsPortals.find(p => p.id === index);\n      const menuItem = {\n        label: mi.label,\n        mountIcon,\n        unmountIcon\n      };\n      if (\"onClick\" in mi) {\n        menuItem.onClick = mi.onClick;\n      } else if (\"open\" in mi) {\n        menuItem.open = mi.open;\n      }\n      customMenuItems.push(menuItem);\n      customMenuItemsPortals.push(iconPortal);\n    }\n    if (isExternalLink2(mi)) {\n      const {\n        portal: iconPortal,\n        mount: mountIcon,\n        unmount: unmountIcon\n      } = customLinkLabelIconsPortals.find(p => p.id === index);\n      customMenuItems.push({\n        label: mi.label,\n        href: mi.href,\n        mountIcon,\n        unmountIcon\n      });\n      customMenuItemsPortals.push(iconPortal);\n    }\n  });\n  return {\n    customMenuItems,\n    customMenuItemsPortals\n  };\n};\nvar isReorderItem2 = (childProps, validItems) => {\n  const {\n    children,\n    label,\n    onClick,\n    labelIcon\n  } = childProps;\n  return !children && !onClick && !labelIcon && validItems.some(v => v === label);\n};\nvar isCustomMenuItem = childProps => {\n  const {\n    label,\n    labelIcon,\n    onClick,\n    open\n  } = childProps;\n  return !!labelIcon && !!label && (typeof onClick === \"function\" || typeof open === \"string\");\n};\nvar isExternalLink2 = childProps => {\n  const {\n    label,\n    href,\n    labelIcon\n  } = childProps;\n  return !!href && !!labelIcon && !!label;\n};\n\n// src/utils/useWaitForComponentMount.ts\nimport { useEffect, useRef, useState as useState2 } from \"react\";\nfunction waitForElementChildren(options) {\n  const {\n    root = document == null ? void 0 : document.body,\n    selector,\n    timeout = 0\n  } = options;\n  return new Promise((resolve, reject) => {\n    if (!root) {\n      reject(new Error(\"No root element provided\"));\n      return;\n    }\n    let elementToWatch = root;\n    if (selector) {\n      elementToWatch = root == null ? void 0 : root.querySelector(selector);\n    }\n    const isElementAlreadyPresent = (elementToWatch == null ? void 0 : elementToWatch.childElementCount) && elementToWatch.childElementCount > 0;\n    if (isElementAlreadyPresent) {\n      resolve();\n      return;\n    }\n    const observer = new MutationObserver(mutationsList => {\n      for (const mutation of mutationsList) {\n        if (mutation.type === \"childList\") {\n          if (!elementToWatch && selector) {\n            elementToWatch = root == null ? void 0 : root.querySelector(selector);\n          }\n          if ((elementToWatch == null ? void 0 : elementToWatch.childElementCount) && elementToWatch.childElementCount > 0) {\n            observer.disconnect();\n            resolve();\n            return;\n          }\n        }\n      }\n    });\n    observer.observe(root, {\n      childList: true,\n      subtree: true\n    });\n    if (timeout > 0) {\n      setTimeout(() => {\n        observer.disconnect();\n        reject(new Error(`Timeout waiting for element children`));\n      }, timeout);\n    }\n  });\n}\nfunction useWaitForComponentMount(component) {\n  const watcherRef = useRef();\n  const [status, setStatus] = useState2(\"rendering\");\n  useEffect(() => {\n    if (!component) {\n      throw new Error(\"Clerk: no component name provided, unable to detect mount.\");\n    }\n    if (typeof window !== \"undefined\" && !watcherRef.current) {\n      watcherRef.current = waitForElementChildren({\n        selector: `[data-clerk-component=\"${component}\"]`\n      }).then(() => {\n        setStatus(\"rendered\");\n      }).catch(() => {\n        setStatus(\"error\");\n      });\n    }\n  }, [component]);\n  return status;\n}\n\n// src/components/ClerkHostRenderer.tsx\nimport { without } from \"@clerk/shared/object\";\nimport { isDeeplyEqual } from \"@clerk/shared/react\";\nimport React6 from \"react\";\nvar isMountProps = props => {\n  return \"mount\" in props;\n};\nvar isOpenProps = props => {\n  return \"open\" in props;\n};\nvar stripMenuItemIconHandlers = menuItems => {\n  return menuItems == null ? void 0 : menuItems.map(({\n    mountIcon,\n    unmountIcon,\n    ...rest\n  }) => rest);\n};\nvar ClerkHostRenderer = class extends React6.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.rootRef = React6.createRef();\n  }\n  componentDidUpdate(_prevProps) {\n    var _a, _b, _c, _d;\n    if (!isMountProps(_prevProps) || !isMountProps(this.props)) {\n      return;\n    }\n    const prevProps = without(_prevProps.props, \"customPages\", \"customMenuItems\", \"children\");\n    const newProps = without(this.props.props, \"customPages\", \"customMenuItems\", \"children\");\n    const customPagesChanged = ((_a = prevProps.customPages) == null ? void 0 : _a.length) !== ((_b = newProps.customPages) == null ? void 0 : _b.length);\n    const customMenuItemsChanged = ((_c = prevProps.customMenuItems) == null ? void 0 : _c.length) !== ((_d = newProps.customMenuItems) == null ? void 0 : _d.length);\n    const prevMenuItemsWithoutHandlers = stripMenuItemIconHandlers(_prevProps.props.customMenuItems);\n    const newMenuItemsWithoutHandlers = stripMenuItemIconHandlers(this.props.props.customMenuItems);\n    if (!isDeeplyEqual(prevProps, newProps) || !isDeeplyEqual(prevMenuItemsWithoutHandlers, newMenuItemsWithoutHandlers) || customPagesChanged || customMenuItemsChanged) {\n      if (this.rootRef.current) {\n        this.props.updateProps({\n          node: this.rootRef.current,\n          props: this.props.props\n        });\n      }\n    }\n  }\n  componentDidMount() {\n    if (this.rootRef.current) {\n      if (isMountProps(this.props)) {\n        this.props.mount(this.rootRef.current, this.props.props);\n      }\n      if (isOpenProps(this.props)) {\n        this.props.open(this.props.props);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (this.rootRef.current) {\n      if (isMountProps(this.props)) {\n        this.props.unmount(this.rootRef.current);\n      }\n      if (isOpenProps(this.props)) {\n        this.props.close();\n      }\n    }\n  }\n  render() {\n    const {\n      hideRootHtmlElement = false\n    } = this.props;\n    const rootAttributes = {\n      ref: this.rootRef,\n      ...this.props.rootProps,\n      ...(this.props.component && {\n        \"data-clerk-component\": this.props.component\n      })\n    };\n    return /* @__PURE__ */React6.createElement(React6.Fragment, null, !hideRootHtmlElement && /* @__PURE__ */React6.createElement(\"div\", {\n      ...rootAttributes\n    }), this.props.children);\n  }\n};\n\n// src/components/uiComponents.tsx\nvar CustomPortalsRenderer = props => {\n  var _a, _b;\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, (_a = props == null ? void 0 : props.customPagesPortals) == null ? void 0 : _a.map((portal, index) => createElement(portal, {\n    key: index\n  })), (_b = props == null ? void 0 : props.customMenuItemsPortals) == null ? void 0 : _b.map((portal, index) => createElement(portal, {\n    key: index\n  })));\n};\nvar SignIn = withClerk(({\n  clerk,\n  component,\n  fallback,\n  ...props\n}) => {\n  const mountingStatus = useWaitForComponentMount(component);\n  const shouldShowFallback = mountingStatus === \"rendering\" || !clerk.loaded;\n  const rendererRootProps = {\n    ...(shouldShowFallback && fallback && {\n      style: {\n        display: \"none\"\n      }\n    })\n  };\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, shouldShowFallback && fallback, clerk.loaded && /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    component,\n    mount: clerk.mountSignIn,\n    unmount: clerk.unmountSignIn,\n    updateProps: clerk.__unstable__updateProps,\n    props,\n    rootProps: rendererRootProps\n  }));\n}, {\n  component: \"SignIn\",\n  renderWhileLoading: true\n});\nvar SignUp = withClerk(({\n  clerk,\n  component,\n  fallback,\n  ...props\n}) => {\n  const mountingStatus = useWaitForComponentMount(component);\n  const shouldShowFallback = mountingStatus === \"rendering\" || !clerk.loaded;\n  const rendererRootProps = {\n    ...(shouldShowFallback && fallback && {\n      style: {\n        display: \"none\"\n      }\n    })\n  };\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, shouldShowFallback && fallback, clerk.loaded && /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    component,\n    mount: clerk.mountSignUp,\n    unmount: clerk.unmountSignUp,\n    updateProps: clerk.__unstable__updateProps,\n    props,\n    rootProps: rendererRootProps\n  }));\n}, {\n  component: \"SignUp\",\n  renderWhileLoading: true\n});\nfunction UserProfilePage({\n  children\n}) {\n  logErrorInDevMode3(userProfilePageRenderedError);\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, children);\n}\nfunction UserProfileLink({\n  children\n}) {\n  logErrorInDevMode3(userProfileLinkRenderedError);\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, children);\n}\nvar _UserProfile = withClerk(({\n  clerk,\n  component,\n  fallback,\n  ...props\n}) => {\n  const mountingStatus = useWaitForComponentMount(component);\n  const shouldShowFallback = mountingStatus === \"rendering\" || !clerk.loaded;\n  const rendererRootProps = {\n    ...(shouldShowFallback && fallback && {\n      style: {\n        display: \"none\"\n      }\n    })\n  };\n  const {\n    customPages,\n    customPagesPortals\n  } = useUserProfileCustomPages(props.children);\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, shouldShowFallback && fallback, /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    component,\n    mount: clerk.mountUserProfile,\n    unmount: clerk.unmountUserProfile,\n    updateProps: clerk.__unstable__updateProps,\n    props: {\n      ...props,\n      customPages\n    },\n    rootProps: rendererRootProps\n  }, /* @__PURE__ */React7.createElement(CustomPortalsRenderer, {\n    customPagesPortals\n  })));\n}, {\n  component: \"UserProfile\",\n  renderWhileLoading: true\n});\nvar UserProfile = Object.assign(_UserProfile, {\n  Page: UserProfilePage,\n  Link: UserProfileLink\n});\nvar UserButtonContext = createContext({\n  mount: () => {},\n  unmount: () => {},\n  updateProps: () => {}\n});\nvar _UserButton = withClerk(({\n  clerk,\n  component,\n  fallback,\n  ...props\n}) => {\n  const mountingStatus = useWaitForComponentMount(component);\n  const shouldShowFallback = mountingStatus === \"rendering\" || !clerk.loaded;\n  const rendererRootProps = {\n    ...(shouldShowFallback && fallback && {\n      style: {\n        display: \"none\"\n      }\n    })\n  };\n  const {\n    customPages,\n    customPagesPortals\n  } = useUserProfileCustomPages(props.children, {\n    allowForAnyChildren: !!props.__experimental_asProvider\n  });\n  const userProfileProps = Object.assign(props.userProfileProps || {}, {\n    customPages\n  });\n  const {\n    customMenuItems,\n    customMenuItemsPortals\n  } = useUserButtonCustomMenuItems(props.children);\n  const sanitizedChildren = useSanitizedChildren(props.children);\n  const passableProps = {\n    mount: clerk.mountUserButton,\n    unmount: clerk.unmountUserButton,\n    updateProps: clerk.__unstable__updateProps,\n    props: {\n      ...props,\n      userProfileProps,\n      customMenuItems\n    }\n  };\n  const portalProps = {\n    customPagesPortals,\n    customMenuItemsPortals\n  };\n  return /* @__PURE__ */React7.createElement(UserButtonContext.Provider, {\n    value: passableProps\n  }, shouldShowFallback && fallback, clerk.loaded && /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    component,\n    ...passableProps,\n    hideRootHtmlElement: !!props.__experimental_asProvider,\n    rootProps: rendererRootProps\n  }, props.__experimental_asProvider ? sanitizedChildren : null, /* @__PURE__ */React7.createElement(CustomPortalsRenderer, {\n    ...portalProps\n  })));\n}, {\n  component: \"UserButton\",\n  renderWhileLoading: true\n});\nfunction MenuItems({\n  children\n}) {\n  logErrorInDevMode3(userButtonMenuItemsRenderedError);\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, children);\n}\nfunction MenuAction({\n  children\n}) {\n  logErrorInDevMode3(userButtonMenuActionRenderedError);\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, children);\n}\nfunction MenuLink({\n  children\n}) {\n  logErrorInDevMode3(userButtonMenuLinkRenderedError);\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, children);\n}\nfunction UserButtonOutlet(outletProps) {\n  const providerProps = useContext(UserButtonContext);\n  const portalProps = {\n    ...providerProps,\n    props: {\n      ...providerProps.props,\n      ...outletProps\n    }\n  };\n  return /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    ...portalProps\n  });\n}\nvar UserButton = Object.assign(_UserButton, {\n  UserProfilePage,\n  UserProfileLink,\n  MenuItems,\n  Action: MenuAction,\n  Link: MenuLink,\n  __experimental_Outlet: UserButtonOutlet\n});\nfunction OrganizationProfilePage({\n  children\n}) {\n  logErrorInDevMode3(organizationProfilePageRenderedError);\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, children);\n}\nfunction OrganizationProfileLink({\n  children\n}) {\n  logErrorInDevMode3(organizationProfileLinkRenderedError);\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, children);\n}\nvar _OrganizationProfile = withClerk(({\n  clerk,\n  component,\n  fallback,\n  ...props\n}) => {\n  const mountingStatus = useWaitForComponentMount(component);\n  const shouldShowFallback = mountingStatus === \"rendering\" || !clerk.loaded;\n  const rendererRootProps = {\n    ...(shouldShowFallback && fallback && {\n      style: {\n        display: \"none\"\n      }\n    })\n  };\n  const {\n    customPages,\n    customPagesPortals\n  } = useOrganizationProfileCustomPages(props.children);\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, shouldShowFallback && fallback, clerk.loaded && /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    component,\n    mount: clerk.mountOrganizationProfile,\n    unmount: clerk.unmountOrganizationProfile,\n    updateProps: clerk.__unstable__updateProps,\n    props: {\n      ...props,\n      customPages\n    },\n    rootProps: rendererRootProps\n  }, /* @__PURE__ */React7.createElement(CustomPortalsRenderer, {\n    customPagesPortals\n  })));\n}, {\n  component: \"OrganizationProfile\",\n  renderWhileLoading: true\n});\nvar OrganizationProfile = Object.assign(_OrganizationProfile, {\n  Page: OrganizationProfilePage,\n  Link: OrganizationProfileLink\n});\nvar CreateOrganization = withClerk(({\n  clerk,\n  component,\n  fallback,\n  ...props\n}) => {\n  const mountingStatus = useWaitForComponentMount(component);\n  const shouldShowFallback = mountingStatus === \"rendering\" || !clerk.loaded;\n  const rendererRootProps = {\n    ...(shouldShowFallback && fallback && {\n      style: {\n        display: \"none\"\n      }\n    })\n  };\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, shouldShowFallback && fallback, clerk.loaded && /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    component,\n    mount: clerk.mountCreateOrganization,\n    unmount: clerk.unmountCreateOrganization,\n    updateProps: clerk.__unstable__updateProps,\n    props,\n    rootProps: rendererRootProps\n  }));\n}, {\n  component: \"CreateOrganization\",\n  renderWhileLoading: true\n});\nvar OrganizationSwitcherContext = createContext({\n  mount: () => {},\n  unmount: () => {},\n  updateProps: () => {}\n});\nvar _OrganizationSwitcher = withClerk(({\n  clerk,\n  component,\n  fallback,\n  ...props\n}) => {\n  const mountingStatus = useWaitForComponentMount(component);\n  const shouldShowFallback = mountingStatus === \"rendering\" || !clerk.loaded;\n  const rendererRootProps = {\n    ...(shouldShowFallback && fallback && {\n      style: {\n        display: \"none\"\n      }\n    })\n  };\n  const {\n    customPages,\n    customPagesPortals\n  } = useOrganizationProfileCustomPages(props.children, {\n    allowForAnyChildren: !!props.__experimental_asProvider\n  });\n  const organizationProfileProps = Object.assign(props.organizationProfileProps || {}, {\n    customPages\n  });\n  const sanitizedChildren = useSanitizedChildren(props.children);\n  const passableProps = {\n    mount: clerk.mountOrganizationSwitcher,\n    unmount: clerk.unmountOrganizationSwitcher,\n    updateProps: clerk.__unstable__updateProps,\n    props: {\n      ...props,\n      organizationProfileProps\n    },\n    rootProps: rendererRootProps,\n    component\n  };\n  clerk.__experimental_prefetchOrganizationSwitcher();\n  return /* @__PURE__ */React7.createElement(OrganizationSwitcherContext.Provider, {\n    value: passableProps\n  }, /* @__PURE__ */React7.createElement(React7.Fragment, null, shouldShowFallback && fallback, clerk.loaded && /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    ...passableProps,\n    hideRootHtmlElement: !!props.__experimental_asProvider\n  }, props.__experimental_asProvider ? sanitizedChildren : null, /* @__PURE__ */React7.createElement(CustomPortalsRenderer, {\n    customPagesPortals\n  }))));\n}, {\n  component: \"OrganizationSwitcher\",\n  renderWhileLoading: true\n});\nfunction OrganizationSwitcherOutlet(outletProps) {\n  const providerProps = useContext(OrganizationSwitcherContext);\n  const portalProps = {\n    ...providerProps,\n    props: {\n      ...providerProps.props,\n      ...outletProps\n    }\n  };\n  return /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    ...portalProps\n  });\n}\nvar OrganizationSwitcher = Object.assign(_OrganizationSwitcher, {\n  OrganizationProfilePage,\n  OrganizationProfileLink,\n  __experimental_Outlet: OrganizationSwitcherOutlet\n});\nvar OrganizationList = withClerk(({\n  clerk,\n  component,\n  fallback,\n  ...props\n}) => {\n  const mountingStatus = useWaitForComponentMount(component);\n  const shouldShowFallback = mountingStatus === \"rendering\" || !clerk.loaded;\n  const rendererRootProps = {\n    ...(shouldShowFallback && fallback && {\n      style: {\n        display: \"none\"\n      }\n    })\n  };\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, shouldShowFallback && fallback, clerk.loaded && /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    component,\n    mount: clerk.mountOrganizationList,\n    unmount: clerk.unmountOrganizationList,\n    updateProps: clerk.__unstable__updateProps,\n    props,\n    rootProps: rendererRootProps\n  }));\n}, {\n  component: \"OrganizationList\",\n  renderWhileLoading: true\n});\nvar GoogleOneTap = withClerk(({\n  clerk,\n  component,\n  fallback,\n  ...props\n}) => {\n  const mountingStatus = useWaitForComponentMount(component);\n  const shouldShowFallback = mountingStatus === \"rendering\" || !clerk.loaded;\n  const rendererRootProps = {\n    ...(shouldShowFallback && fallback && {\n      style: {\n        display: \"none\"\n      }\n    })\n  };\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, shouldShowFallback && fallback, clerk.loaded && /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    component,\n    open: clerk.openGoogleOneTap,\n    close: clerk.closeGoogleOneTap,\n    updateProps: clerk.__unstable__updateProps,\n    props,\n    rootProps: rendererRootProps\n  }));\n}, {\n  component: \"GoogleOneTap\",\n  renderWhileLoading: true\n});\nvar Waitlist = withClerk(({\n  clerk,\n  component,\n  fallback,\n  ...props\n}) => {\n  const mountingStatus = useWaitForComponentMount(component);\n  const shouldShowFallback = mountingStatus === \"rendering\" || !clerk.loaded;\n  const rendererRootProps = {\n    ...(shouldShowFallback && fallback && {\n      style: {\n        display: \"none\"\n      }\n    })\n  };\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, shouldShowFallback && fallback, clerk.loaded && /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    component,\n    mount: clerk.mountWaitlist,\n    unmount: clerk.unmountWaitlist,\n    updateProps: clerk.__unstable__updateProps,\n    props,\n    rootProps: rendererRootProps\n  }));\n}, {\n  component: \"Waitlist\",\n  renderWhileLoading: true\n});\nvar PricingTable = withClerk(({\n  clerk,\n  component,\n  fallback,\n  ...props\n}) => {\n  const mountingStatus = useWaitForComponentMount(component);\n  const shouldShowFallback = mountingStatus === \"rendering\" || !clerk.loaded;\n  const rendererRootProps = {\n    ...(shouldShowFallback && fallback && {\n      style: {\n        display: \"none\"\n      }\n    })\n  };\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, shouldShowFallback && fallback, clerk.loaded && /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    component,\n    mount: clerk.mountPricingTable,\n    unmount: clerk.unmountPricingTable,\n    updateProps: clerk.__unstable__updateProps,\n    props,\n    rootProps: rendererRootProps\n  }));\n}, {\n  component: \"PricingTable\",\n  renderWhileLoading: true\n});\nvar APIKeys = withClerk(({\n  clerk,\n  component,\n  fallback,\n  ...props\n}) => {\n  const mountingStatus = useWaitForComponentMount(component);\n  const shouldShowFallback = mountingStatus === \"rendering\" || !clerk.loaded;\n  const rendererRootProps = {\n    ...(shouldShowFallback && fallback && {\n      style: {\n        display: \"none\"\n      }\n    })\n  };\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, shouldShowFallback && fallback, clerk.loaded && /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    component,\n    mount: clerk.mountApiKeys,\n    unmount: clerk.unmountApiKeys,\n    updateProps: clerk.__unstable__updateProps,\n    props,\n    rootProps: rendererRootProps\n  }));\n}, {\n  component: \"ApiKeys\",\n  renderWhileLoading: true\n});\nvar TaskSelectOrganization = withClerk(({\n  clerk,\n  component,\n  fallback,\n  ...props\n}) => {\n  const mountingStatus = useWaitForComponentMount(component);\n  const shouldShowFallback = mountingStatus === \"rendering\" || !clerk.loaded;\n  const rendererRootProps = {\n    ...(shouldShowFallback && fallback && {\n      style: {\n        display: \"none\"\n      }\n    })\n  };\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, shouldShowFallback && fallback, clerk.loaded && /* @__PURE__ */React7.createElement(ClerkHostRenderer, {\n    component,\n    mount: clerk.mountTaskSelectOrganization,\n    unmount: clerk.unmountTaskSelectOrganization,\n    updateProps: clerk.__unstable__updateProps,\n    props,\n    rootProps: rendererRootProps\n  }));\n}, {\n  component: \"TaskSelectOrganization\",\n  renderWhileLoading: true\n});\nexport { assertSingleChild, normalizeWithDefaultValue, safeExecute, isConstructor, withMaxAllowedInstancesGuard, SignIn, SignUp, UserProfile, UserButton, OrganizationProfile, CreateOrganization, OrganizationSwitcher, OrganizationList, GoogleOneTap, Waitlist, PricingTable, APIKeys, TaskSelectOrganization };","map":{"version":3,"names":["logErrorInDevMode","logErrorInDevMode3","React7","createContext","createElement","useContext","React","assertSingleChild","children","name","Children","only","errorThrower","throw","multipleChildrenInButtonComponent","normalizeWithDefaultValue","defaultText","safeExecute","cb","args","isConstructor","f","React2","counts","Map","useMaxAllowedInstancesGuard","error","maxCount","useEffect","count","get","set","withMaxAllowedInstancesGuard","WrappedComponent","displayName","Hoc","props","useState","createPortal","useCustomElementPortal","elements","nodeMap","setNodeMap","map","el","id","mount","node","prev","String","unmount","newMap","portal","component","React4","React3","isThatComponent","v","isValidElement","type","useUserProfileCustomPages","options","reorderItemsLabels","useCustomPages","LinkComponent","UserProfileLink","PageComponent","UserProfilePage","MenuItemsComponent","MenuItems","componentName","useOrganizationProfileCustomPages","OrganizationProfileLink","OrganizationProfilePage","useSanitizedChildren","sanitizedChildren","excludedComponents","forEach","child","some","push","params","allowForAnyChildren","validChildren","customPagesIgnoredComponent","children2","label","url","labelIcon","isReorderItem","isCustomPage","customPageWrongProps","isExternalLink","customLinkWrongProps","customPageContents","customPageLabelIcons","customLinkLabelIcons","cp","index","customPageContentsPortals","customPageLabelIconsPortals","customLinkLabelIconsPortals","customPages","customPagesPortals","contentPortal","find","p","labelPortal","mountIcon","unmountIcon","childProps","validItems","logErrorInDevMode2","React5","useUserButtonCustomMenuItems","useCustomMenuItems","MenuActionComponent","MenuAction","MenuLinkComponent","MenuLink","UserProfileLinkComponent","UserProfilePageComponent","customMenuItems","customMenuItemsPortals","userButtonIgnoredComponent","child2","customMenuItemsIgnoredComponent","props2","href","onClick","open","isReorderItem2","isCustomMenuItem","baseItem","startsWith","userButtonMenuItemsActionWrongsProps","isExternalLink2","userButtonMenuItemLinkWrongProps","customMenuItemLabelIcons","mi","customMenuItemLabelIconsPortals","iconPortal","menuItem","useRef","useState2","waitForElementChildren","root","document","body","selector","timeout","Promise","resolve","reject","Error","elementToWatch","querySelector","isElementAlreadyPresent","childElementCount","observer","MutationObserver","mutationsList","mutation","disconnect","observe","childList","subtree","setTimeout","useWaitForComponentMount","watcherRef","status","setStatus","window","current","then","catch","without","isDeeplyEqual","React6","isMountProps","isOpenProps","stripMenuItemIconHandlers","menuItems","rest","ClerkHostRenderer","PureComponent","constructor","arguments","rootRef","createRef","componentDidUpdate","_prevProps","_a","_b","_c","_d","prevProps","newProps","customPagesChanged","length","customMenuItemsChanged","prevMenuItemsWithoutHandlers","newMenuItemsWithoutHandlers","updateProps","componentDidMount","componentWillUnmount","close","render","hideRootHtmlElement","rootAttributes","ref","rootProps","Fragment","CustomPortalsRenderer","key","SignIn","withClerk","clerk","fallback","mountingStatus","shouldShowFallback","loaded","rendererRootProps","style","display","mountSignIn","unmountSignIn","__unstable__updateProps","renderWhileLoading","SignUp","mountSignUp","unmountSignUp","userProfilePageRenderedError","userProfileLinkRenderedError","_UserProfile","mountUserProfile","unmountUserProfile","UserProfile","Object","assign","Page","Link","UserButtonContext","_UserButton","__experimental_asProvider","userProfileProps","passableProps","mountUserButton","unmountUserButton","portalProps","Provider","value","userButtonMenuItemsRenderedError","userButtonMenuActionRenderedError","userButtonMenuLinkRenderedError","UserButtonOutlet","outletProps","providerProps","UserButton","Action","__experimental_Outlet","organizationProfilePageRenderedError","organizationProfileLinkRenderedError","_OrganizationProfile","mountOrganizationProfile","unmountOrganizationProfile","OrganizationProfile","CreateOrganization","mountCreateOrganization","unmountCreateOrganization","OrganizationSwitcherContext","_OrganizationSwitcher","organizationProfileProps","mountOrganizationSwitcher","unmountOrganizationSwitcher","__experimental_prefetchOrganizationSwitcher","OrganizationSwitcherOutlet","OrganizationSwitcher","OrganizationList","mountOrganizationList","unmountOrganizationList","GoogleOneTap","openGoogleOneTap","closeGoogleOneTap","Waitlist","mountWaitlist","unmountWaitlist","PricingTable","mountPricingTable","unmountPricingTable","APIKeys","mountApiKeys","unmountApiKeys","TaskSelectOrganization","mountTaskSelectOrganization","unmountTaskSelectOrganization"],"sources":["C:\\Users\\Piyush Nimbalkar\\Desktop\\WDL\\salary-sense\\client\\node_modules\\@clerk\\clerk-react\\src\\components\\uiComponents.tsx","C:\\Users\\Piyush Nimbalkar\\Desktop\\WDL\\salary-sense\\client\\node_modules\\@clerk\\clerk-react\\src\\utils\\childrenUtils.tsx","C:\\Users\\Piyush Nimbalkar\\Desktop\\WDL\\salary-sense\\client\\node_modules\\@clerk\\clerk-react\\src\\utils\\isConstructor.ts","C:\\Users\\Piyush Nimbalkar\\Desktop\\WDL\\salary-sense\\client\\node_modules\\@clerk\\clerk-react\\src\\utils\\useMaxAllowedInstancesGuard.tsx","C:\\Users\\Piyush Nimbalkar\\Desktop\\WDL\\salary-sense\\client\\node_modules\\@clerk\\clerk-react\\src\\utils\\useCustomElementPortal.tsx","C:\\Users\\Piyush Nimbalkar\\Desktop\\WDL\\salary-sense\\client\\node_modules\\@clerk\\clerk-react\\src\\utils\\useCustomPages.tsx","C:\\Users\\Piyush Nimbalkar\\Desktop\\WDL\\salary-sense\\client\\node_modules\\@clerk\\clerk-react\\src\\utils\\componentValidation.ts","C:\\Users\\Piyush Nimbalkar\\Desktop\\WDL\\salary-sense\\client\\node_modules\\@clerk\\clerk-react\\src\\utils\\useCustomMenuItems.tsx","C:\\Users\\Piyush Nimbalkar\\Desktop\\WDL\\salary-sense\\client\\node_modules\\@clerk\\clerk-react\\src\\utils\\useWaitForComponentMount.ts","C:\\Users\\Piyush Nimbalkar\\Desktop\\WDL\\salary-sense\\client\\node_modules\\@clerk\\clerk-react\\src\\components\\ClerkHostRenderer.tsx"],"sourcesContent":["import { logErrorInDevMode } from '@clerk/shared/utils';\nimport type {\n  APIKeysProps,\n  CreateOrganizationProps,\n  GoogleOneTapProps,\n  OrganizationListProps,\n  OrganizationProfileProps,\n  OrganizationSwitcherProps,\n  PricingTableProps,\n  SignInProps,\n  SignUpProps,\n  TaskSelectOrganizationProps,\n  UserButtonProps,\n  UserProfileProps,\n  WaitlistProps,\n  Without,\n} from '@clerk/types';\nimport type { PropsWithChildren, ReactNode } from 'react';\nimport React, { createContext, createElement, useContext } from 'react';\n\nimport {\n  organizationProfileLinkRenderedError,\n  organizationProfilePageRenderedError,\n  userButtonMenuActionRenderedError,\n  userButtonMenuItemsRenderedError,\n  userButtonMenuLinkRenderedError,\n  userProfileLinkRenderedError,\n  userProfilePageRenderedError,\n} from '../errors/messages';\nimport type {\n  CustomPortalsRendererProps,\n  MountProps,\n  OrganizationProfileLinkProps,\n  OrganizationProfilePageProps,\n  UserButtonActionProps,\n  UserButtonLinkProps,\n  UserProfileLinkProps,\n  UserProfilePageProps,\n  WithClerkProp,\n} from '../types';\nimport {\n  useOrganizationProfileCustomPages,\n  useSanitizedChildren,\n  useUserButtonCustomMenuItems,\n  useUserProfileCustomPages,\n} from '../utils';\nimport { useWaitForComponentMount } from '../utils/useWaitForComponentMount';\nimport { ClerkHostRenderer } from './ClerkHostRenderer';\nimport { withClerk } from './withClerk';\n\ntype FallbackProp = {\n  /**\n   * An optional element to render while the component is mounting.\n   */\n  fallback?: ReactNode;\n};\n\ntype UserProfileExportType = typeof _UserProfile & {\n  Page: typeof UserProfilePage;\n  Link: typeof UserProfileLink;\n};\n\ntype UserButtonExportType = typeof _UserButton & {\n  UserProfilePage: typeof UserProfilePage;\n  UserProfileLink: typeof UserProfileLink;\n  MenuItems: typeof MenuItems;\n  Action: typeof MenuAction;\n  Link: typeof MenuLink;\n  /**\n   * The `<Outlet />` component can be used in conjunction with `asProvider` in order to control rendering\n   * of the `<UserButton />` without affecting its configuration or any custom pages that could be mounted\n   * @experimental This API is experimental and may change at any moment.\n   */\n  __experimental_Outlet: typeof UserButtonOutlet;\n};\n\ntype UserButtonPropsWithoutCustomPages = Without<\n  UserButtonProps,\n  'userProfileProps' | '__experimental_asStandalone'\n> & {\n  userProfileProps?: Pick<UserProfileProps, 'additionalOAuthScopes' | 'appearance'>;\n  /**\n   * Adding `asProvider` will defer rendering until the `<Outlet />` component is mounted.\n   * This API is experimental and may change at any moment.\n   * @experimental\n   * @default undefined\n   */\n  __experimental_asProvider?: boolean;\n};\n\ntype OrganizationProfileExportType = typeof _OrganizationProfile & {\n  Page: typeof OrganizationProfilePage;\n  Link: typeof OrganizationProfileLink;\n};\n\ntype OrganizationSwitcherExportType = typeof _OrganizationSwitcher & {\n  OrganizationProfilePage: typeof OrganizationProfilePage;\n  OrganizationProfileLink: typeof OrganizationProfileLink;\n  /**\n   * The `<Outlet />` component can be used in conjunction with `asProvider` in order to control rendering\n   * of the `<OrganizationSwitcher />` without affecting its configuration or any custom pages that could be mounted\n   * @experimental This API is experimental and may change at any moment.\n   */\n  __experimental_Outlet: typeof OrganizationSwitcherOutlet;\n};\n\ntype OrganizationSwitcherPropsWithoutCustomPages = Without<\n  OrganizationSwitcherProps,\n  'organizationProfileProps' | '__experimental_asStandalone'\n> & {\n  organizationProfileProps?: Pick<OrganizationProfileProps, 'appearance'>;\n  /**\n   * Adding `asProvider` will defer rendering until the `<Outlet />` component is mounted.\n   * This API is experimental and may change at any moment.\n   * @experimental\n   * @default undefined\n   */\n  __experimental_asProvider?: boolean;\n};\n\nconst CustomPortalsRenderer = (props: CustomPortalsRendererProps) => {\n  return (\n    <>\n      {props?.customPagesPortals?.map((portal, index) => createElement(portal, { key: index }))}\n      {props?.customMenuItemsPortals?.map((portal, index) => createElement(portal, { key: index }))}\n    </>\n  );\n};\n\nexport const SignIn = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<SignInProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountSignIn}\n            unmount={clerk.unmountSignIn}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'SignIn', renderWhileLoading: true },\n);\n\nexport const SignUp = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<SignUpProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountSignUp}\n            unmount={clerk.unmountSignUp}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'SignUp', renderWhileLoading: true },\n);\n\nexport function UserProfilePage({ children }: PropsWithChildren<UserProfilePageProps>) {\n  logErrorInDevMode(userProfilePageRenderedError);\n  return <>{children}</>;\n}\n\nexport function UserProfileLink({ children }: PropsWithChildren<UserProfileLinkProps>) {\n  logErrorInDevMode(userProfileLinkRenderedError);\n  return <>{children}</>;\n}\n\nconst _UserProfile = withClerk(\n  ({\n    clerk,\n    component,\n    fallback,\n    ...props\n  }: WithClerkProp<PropsWithChildren<Without<UserProfileProps, 'customPages'>> & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    const { customPages, customPagesPortals } = useUserProfileCustomPages(props.children);\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        <ClerkHostRenderer\n          component={component}\n          mount={clerk.mountUserProfile}\n          unmount={clerk.unmountUserProfile}\n          updateProps={(clerk as any).__unstable__updateProps}\n          props={{ ...props, customPages }}\n          rootProps={rendererRootProps}\n        >\n          <CustomPortalsRenderer customPagesPortals={customPagesPortals} />\n        </ClerkHostRenderer>\n      </>\n    );\n  },\n  { component: 'UserProfile', renderWhileLoading: true },\n);\n\nexport const UserProfile: UserProfileExportType = Object.assign(_UserProfile, {\n  Page: UserProfilePage,\n  Link: UserProfileLink,\n});\n\nconst UserButtonContext = createContext<MountProps>({\n  mount: () => {},\n  unmount: () => {},\n  updateProps: () => {},\n});\n\nconst _UserButton = withClerk(\n  ({\n    clerk,\n    component,\n    fallback,\n    ...props\n  }: WithClerkProp<PropsWithChildren<UserButtonPropsWithoutCustomPages> & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    const { customPages, customPagesPortals } = useUserProfileCustomPages(props.children, {\n      allowForAnyChildren: !!props.__experimental_asProvider,\n    });\n    const userProfileProps = Object.assign(props.userProfileProps || {}, { customPages });\n    const { customMenuItems, customMenuItemsPortals } = useUserButtonCustomMenuItems(props.children);\n    const sanitizedChildren = useSanitizedChildren(props.children);\n\n    const passableProps = {\n      mount: clerk.mountUserButton,\n      unmount: clerk.unmountUserButton,\n      updateProps: (clerk as any).__unstable__updateProps,\n      props: { ...props, userProfileProps, customMenuItems },\n    };\n    const portalProps = {\n      customPagesPortals: customPagesPortals,\n      customMenuItemsPortals: customMenuItemsPortals,\n    };\n\n    return (\n      <UserButtonContext.Provider value={passableProps}>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            {...passableProps}\n            hideRootHtmlElement={!!props.__experimental_asProvider}\n            rootProps={rendererRootProps}\n          >\n            {/*This mimics the previous behaviour before asProvider existed*/}\n            {props.__experimental_asProvider ? sanitizedChildren : null}\n            <CustomPortalsRenderer {...portalProps} />\n          </ClerkHostRenderer>\n        )}\n      </UserButtonContext.Provider>\n    );\n  },\n  { component: 'UserButton', renderWhileLoading: true },\n);\n\nexport function MenuItems({ children }: PropsWithChildren) {\n  logErrorInDevMode(userButtonMenuItemsRenderedError);\n  return <>{children}</>;\n}\n\nexport function MenuAction({ children }: PropsWithChildren<UserButtonActionProps>) {\n  logErrorInDevMode(userButtonMenuActionRenderedError);\n  return <>{children}</>;\n}\n\nexport function MenuLink({ children }: PropsWithChildren<UserButtonLinkProps>) {\n  logErrorInDevMode(userButtonMenuLinkRenderedError);\n  return <>{children}</>;\n}\n\nexport function UserButtonOutlet(outletProps: Without<UserButtonProps, 'userProfileProps'>) {\n  const providerProps = useContext(UserButtonContext);\n\n  const portalProps = {\n    ...providerProps,\n    props: {\n      ...providerProps.props,\n      ...outletProps,\n    },\n  } satisfies MountProps;\n\n  return <ClerkHostRenderer {...portalProps} />;\n}\n\nexport const UserButton: UserButtonExportType = Object.assign(_UserButton, {\n  UserProfilePage,\n  UserProfileLink,\n  MenuItems,\n  Action: MenuAction,\n  Link: MenuLink,\n  __experimental_Outlet: UserButtonOutlet,\n});\n\nexport function OrganizationProfilePage({ children }: PropsWithChildren<OrganizationProfilePageProps>) {\n  logErrorInDevMode(organizationProfilePageRenderedError);\n  return <>{children}</>;\n}\n\nexport function OrganizationProfileLink({ children }: PropsWithChildren<OrganizationProfileLinkProps>) {\n  logErrorInDevMode(organizationProfileLinkRenderedError);\n  return <>{children}</>;\n}\n\nconst _OrganizationProfile = withClerk(\n  ({\n    clerk,\n    component,\n    fallback,\n    ...props\n  }: WithClerkProp<PropsWithChildren<Without<OrganizationProfileProps, 'customPages'>> & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    const { customPages, customPagesPortals } = useOrganizationProfileCustomPages(props.children);\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountOrganizationProfile}\n            unmount={clerk.unmountOrganizationProfile}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={{ ...props, customPages }}\n            rootProps={rendererRootProps}\n          >\n            <CustomPortalsRenderer customPagesPortals={customPagesPortals} />\n          </ClerkHostRenderer>\n        )}\n      </>\n    );\n  },\n  { component: 'OrganizationProfile', renderWhileLoading: true },\n);\n\nexport const OrganizationProfile: OrganizationProfileExportType = Object.assign(_OrganizationProfile, {\n  Page: OrganizationProfilePage,\n  Link: OrganizationProfileLink,\n});\n\nexport const CreateOrganization = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<CreateOrganizationProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountCreateOrganization}\n            unmount={clerk.unmountCreateOrganization}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'CreateOrganization', renderWhileLoading: true },\n);\n\nconst OrganizationSwitcherContext = createContext<MountProps>({\n  mount: () => {},\n  unmount: () => {},\n  updateProps: () => {},\n});\n\nconst _OrganizationSwitcher = withClerk(\n  ({\n    clerk,\n    component,\n    fallback,\n    ...props\n  }: WithClerkProp<PropsWithChildren<OrganizationSwitcherPropsWithoutCustomPages> & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    const { customPages, customPagesPortals } = useOrganizationProfileCustomPages(props.children, {\n      allowForAnyChildren: !!props.__experimental_asProvider,\n    });\n    const organizationProfileProps = Object.assign(props.organizationProfileProps || {}, { customPages });\n    const sanitizedChildren = useSanitizedChildren(props.children);\n\n    const passableProps = {\n      mount: clerk.mountOrganizationSwitcher,\n      unmount: clerk.unmountOrganizationSwitcher,\n      updateProps: (clerk as any).__unstable__updateProps,\n      props: { ...props, organizationProfileProps },\n      rootProps: rendererRootProps,\n      component,\n    };\n\n    /**\n     * Prefetch organization list\n     */\n    clerk.__experimental_prefetchOrganizationSwitcher();\n\n    return (\n      <OrganizationSwitcherContext.Provider value={passableProps}>\n        <>\n          {shouldShowFallback && fallback}\n          {clerk.loaded && (\n            <ClerkHostRenderer\n              {...passableProps}\n              hideRootHtmlElement={!!props.__experimental_asProvider}\n            >\n              {/*This mimics the previous behaviour before asProvider existed*/}\n              {props.__experimental_asProvider ? sanitizedChildren : null}\n              <CustomPortalsRenderer customPagesPortals={customPagesPortals} />\n            </ClerkHostRenderer>\n          )}\n        </>\n      </OrganizationSwitcherContext.Provider>\n    );\n  },\n  { component: 'OrganizationSwitcher', renderWhileLoading: true },\n);\n\nexport function OrganizationSwitcherOutlet(\n  outletProps: Without<OrganizationSwitcherProps, 'organizationProfileProps'>,\n) {\n  const providerProps = useContext(OrganizationSwitcherContext);\n\n  const portalProps = {\n    ...providerProps,\n    props: {\n      ...providerProps.props,\n      ...outletProps,\n    },\n  } satisfies MountProps;\n\n  return <ClerkHostRenderer {...portalProps} />;\n}\n\nexport const OrganizationSwitcher: OrganizationSwitcherExportType = Object.assign(_OrganizationSwitcher, {\n  OrganizationProfilePage,\n  OrganizationProfileLink,\n  __experimental_Outlet: OrganizationSwitcherOutlet,\n});\n\nexport const OrganizationList = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<OrganizationListProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountOrganizationList}\n            unmount={clerk.unmountOrganizationList}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'OrganizationList', renderWhileLoading: true },\n);\n\nexport const GoogleOneTap = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<GoogleOneTapProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            open={clerk.openGoogleOneTap}\n            close={clerk.closeGoogleOneTap}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'GoogleOneTap', renderWhileLoading: true },\n);\n\nexport const Waitlist = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<WaitlistProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountWaitlist}\n            unmount={clerk.unmountWaitlist}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'Waitlist', renderWhileLoading: true },\n);\n\nexport const PricingTable = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<PricingTableProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountPricingTable}\n            unmount={clerk.unmountPricingTable}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'PricingTable', renderWhileLoading: true },\n);\n\n/**\n * @experimental\n * This component is in early access and may change in future releases.\n */\nexport const APIKeys = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<APIKeysProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountApiKeys}\n            unmount={clerk.unmountApiKeys}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'ApiKeys', renderWhileLoading: true },\n);\n\nexport const TaskSelectOrganization = withClerk(\n  ({ clerk, component, fallback, ...props }: WithClerkProp<TaskSelectOrganizationProps & FallbackProp>) => {\n    const mountingStatus = useWaitForComponentMount(component);\n    const shouldShowFallback = mountingStatus === 'rendering' || !clerk.loaded;\n\n    const rendererRootProps = {\n      ...(shouldShowFallback && fallback && { style: { display: 'none' } }),\n    };\n\n    return (\n      <>\n        {shouldShowFallback && fallback}\n        {clerk.loaded && (\n          <ClerkHostRenderer\n            component={component}\n            mount={clerk.mountTaskSelectOrganization}\n            unmount={clerk.unmountTaskSelectOrganization}\n            updateProps={(clerk as any).__unstable__updateProps}\n            props={props}\n            rootProps={rendererRootProps}\n          />\n        )}\n      </>\n    );\n  },\n  { component: 'TaskSelectOrganization', renderWhileLoading: true },\n);\n","import React from 'react';\n\nimport { errorThrower } from '../errors/errorThrower';\nimport { multipleChildrenInButtonComponent } from '../errors/messages';\n\nexport const assertSingleChild =\n  (children: React.ReactNode) =>\n  (\n    name:\n      | 'SignInButton'\n      | 'SignUpButton'\n      | 'SignOutButton'\n      | 'SignInWithMetamaskButton'\n      | 'CheckoutButton'\n      | 'SubscriptionDetailsButton'\n      | 'PlanDetailsButton',\n  ) => {\n    try {\n      return React.Children.only(children);\n    } catch {\n      return errorThrower.throw(multipleChildrenInButtonComponent(name));\n    }\n  };\n\nexport const normalizeWithDefaultValue = (children: React.ReactNode | undefined, defaultText: string) => {\n  if (!children) {\n    children = defaultText;\n  }\n  if (typeof children === 'string') {\n    children = <button>{children}</button>;\n  }\n  return children;\n};\n\nexport const safeExecute =\n  (cb: unknown) =>\n  (...args: any) => {\n    if (cb && typeof cb === 'function') {\n      return cb(...args);\n    }\n  };\n","export function isConstructor<T>(f: any): f is T {\n  return typeof f === 'function';\n}\n","import React from 'react';\n\nimport { errorThrower } from '../errors/errorThrower';\n\nconst counts = new Map<string, number>();\n\nexport function useMaxAllowedInstancesGuard(name: string, error: string, maxCount = 1): void {\n  React.useEffect(() => {\n    const count = counts.get(name) || 0;\n    if (count == maxCount) {\n      return errorThrower.throw(error);\n    }\n    counts.set(name, count + 1);\n\n    return () => {\n      counts.set(name, (counts.get(name) || 1) - 1);\n    };\n  }, []);\n}\n\nexport function withMaxAllowedInstancesGuard<P>(\n  WrappedComponent: React.ComponentType<P>,\n  name: string,\n  error: string,\n): React.ComponentType<P> {\n  const displayName = WrappedComponent.displayName || WrappedComponent.name || name || 'Component';\n  const Hoc = (props: P) => {\n    useMaxAllowedInstancesGuard(name, error);\n    return <WrappedComponent {...(props as any)} />;\n  };\n  Hoc.displayName = `withMaxAllowedInstancesGuard(${displayName})`;\n  return Hoc;\n}\n","import type React from 'react';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nexport type UseCustomElementPortalParams = {\n  component: React.ReactNode;\n  id: number;\n};\n\nexport type UseCustomElementPortalReturn = {\n  portal: () => React.JSX.Element;\n  mount: (node: Element) => void;\n  unmount: () => void;\n  id: number;\n};\n\n// This function takes a component as prop, and returns functions that mount and unmount\n// the given component into a given node\nexport const useCustomElementPortal = (elements: UseCustomElementPortalParams[]) => {\n  const [nodeMap, setNodeMap] = useState<Map<string, Element | null>>(new Map());\n\n  return elements.map(el => ({\n    id: el.id,\n    mount: (node: Element) => setNodeMap(prev => new Map(prev).set(String(el.id), node)),\n    unmount: () =>\n      setNodeMap(prev => {\n        const newMap = new Map(prev);\n        newMap.set(String(el.id), null);\n        return newMap;\n      }),\n    portal: () => {\n      const node = nodeMap.get(String(el.id));\n      return node ? createPortal(el.component, node) : null;\n    },\n  }));\n};\n","import { logErrorInDevMode } from '@clerk/shared/utils';\nimport type { CustomPage } from '@clerk/types';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport {\n  MenuItems,\n  OrganizationProfileLink,\n  OrganizationProfilePage,\n  UserProfileLink,\n  UserProfilePage,\n} from '../components/uiComponents';\nimport { customLinkWrongProps, customPagesIgnoredComponent, customPageWrongProps } from '../errors/messages';\nimport type { UserProfilePageProps } from '../types';\nimport { isThatComponent } from './componentValidation';\nimport type { UseCustomElementPortalParams, UseCustomElementPortalReturn } from './useCustomElementPortal';\nimport { useCustomElementPortal } from './useCustomElementPortal';\n\nexport const useUserProfileCustomPages = (\n  children: React.ReactNode | React.ReactNode[],\n  options?: UseCustomPagesOptions,\n) => {\n  const reorderItemsLabels = ['account', 'security'];\n  return useCustomPages(\n    {\n      children,\n      reorderItemsLabels,\n      LinkComponent: UserProfileLink,\n      PageComponent: UserProfilePage,\n      MenuItemsComponent: MenuItems,\n      componentName: 'UserProfile',\n    },\n    options,\n  );\n};\n\nexport const useOrganizationProfileCustomPages = (\n  children: React.ReactNode | React.ReactNode[],\n  options?: UseCustomPagesOptions,\n) => {\n  const reorderItemsLabels = ['general', 'members'];\n  return useCustomPages(\n    {\n      children,\n      reorderItemsLabels,\n      LinkComponent: OrganizationProfileLink,\n      PageComponent: OrganizationProfilePage,\n      componentName: 'OrganizationProfile',\n    },\n    options,\n  );\n};\n\ntype UseCustomPagesParams = {\n  children: React.ReactNode | React.ReactNode[];\n  LinkComponent: any;\n  PageComponent: any;\n  MenuItemsComponent?: any;\n  reorderItemsLabels: string[];\n  componentName: string;\n};\n\ntype UseCustomPagesOptions = {\n  allowForAnyChildren: boolean;\n};\n\ntype CustomPageWithIdType = UserProfilePageProps & { children?: React.ReactNode };\n\n/**\n * Exclude any children that is used for identifying Custom Pages or Custom Items.\n * Passing:\n * ```tsx\n *  <UserProfile.Page/>\n *  <OrganizationProfile.Link/>\n *  <MyComponent>\n *  <UserButton.MenuItems/>\n * ```\n * Gives back\n * ```tsx\n * <MyComponent>\n * ````\n */\nexport const useSanitizedChildren = (children: React.ReactNode) => {\n  const sanitizedChildren: React.ReactNode[] = [];\n\n  const excludedComponents: any[] = [\n    OrganizationProfileLink,\n    OrganizationProfilePage,\n    MenuItems,\n    UserProfilePage,\n    UserProfileLink,\n  ];\n\n  React.Children.forEach(children, child => {\n    if (!excludedComponents.some(component => isThatComponent(child, component))) {\n      sanitizedChildren.push(child);\n    }\n  });\n\n  return sanitizedChildren;\n};\n\nconst useCustomPages = (params: UseCustomPagesParams, options?: UseCustomPagesOptions) => {\n  const { children, LinkComponent, PageComponent, MenuItemsComponent, reorderItemsLabels, componentName } = params;\n  const { allowForAnyChildren = false } = options || {};\n  const validChildren: CustomPageWithIdType[] = [];\n\n  React.Children.forEach(children, child => {\n    if (\n      !isThatComponent(child, PageComponent) &&\n      !isThatComponent(child, LinkComponent) &&\n      !isThatComponent(child, MenuItemsComponent)\n    ) {\n      if (child && !allowForAnyChildren) {\n        logErrorInDevMode(customPagesIgnoredComponent(componentName));\n      }\n      return;\n    }\n\n    const { props } = child as ReactElement;\n\n    const { children, label, url, labelIcon } = props;\n\n    if (isThatComponent(child, PageComponent)) {\n      if (isReorderItem(props, reorderItemsLabels)) {\n        // This is a reordering item\n        validChildren.push({ label });\n      } else if (isCustomPage(props)) {\n        // this is a custom page\n        validChildren.push({ label, labelIcon, children, url });\n      } else {\n        logErrorInDevMode(customPageWrongProps(componentName));\n        return;\n      }\n    }\n\n    if (isThatComponent(child, LinkComponent)) {\n      if (isExternalLink(props)) {\n        // This is an external link\n        validChildren.push({ label, labelIcon, url });\n      } else {\n        logErrorInDevMode(customLinkWrongProps(componentName));\n        return;\n      }\n    }\n  });\n\n  const customPageContents: UseCustomElementPortalParams[] = [];\n  const customPageLabelIcons: UseCustomElementPortalParams[] = [];\n  const customLinkLabelIcons: UseCustomElementPortalParams[] = [];\n\n  validChildren.forEach((cp, index) => {\n    if (isCustomPage(cp)) {\n      customPageContents.push({ component: cp.children, id: index });\n      customPageLabelIcons.push({ component: cp.labelIcon, id: index });\n      return;\n    }\n    if (isExternalLink(cp)) {\n      customLinkLabelIcons.push({ component: cp.labelIcon, id: index });\n    }\n  });\n\n  const customPageContentsPortals = useCustomElementPortal(customPageContents);\n  const customPageLabelIconsPortals = useCustomElementPortal(customPageLabelIcons);\n  const customLinkLabelIconsPortals = useCustomElementPortal(customLinkLabelIcons);\n\n  const customPages: CustomPage[] = [];\n  const customPagesPortals: React.ComponentType[] = [];\n\n  validChildren.forEach((cp, index) => {\n    if (isReorderItem(cp, reorderItemsLabels)) {\n      customPages.push({ label: cp.label });\n      return;\n    }\n    if (isCustomPage(cp)) {\n      const {\n        portal: contentPortal,\n        mount,\n        unmount,\n      } = customPageContentsPortals.find(p => p.id === index) as UseCustomElementPortalReturn;\n      const {\n        portal: labelPortal,\n        mount: mountIcon,\n        unmount: unmountIcon,\n      } = customPageLabelIconsPortals.find(p => p.id === index) as UseCustomElementPortalReturn;\n      customPages.push({ label: cp.label, url: cp.url, mount, unmount, mountIcon, unmountIcon });\n      customPagesPortals.push(contentPortal);\n      customPagesPortals.push(labelPortal);\n      return;\n    }\n    if (isExternalLink(cp)) {\n      const {\n        portal: labelPortal,\n        mount: mountIcon,\n        unmount: unmountIcon,\n      } = customLinkLabelIconsPortals.find(p => p.id === index) as UseCustomElementPortalReturn;\n      customPages.push({ label: cp.label, url: cp.url, mountIcon, unmountIcon });\n      customPagesPortals.push(labelPortal);\n      return;\n    }\n  });\n\n  return { customPages, customPagesPortals };\n};\n\nconst isReorderItem = (childProps: any, validItems: string[]): boolean => {\n  const { children, label, url, labelIcon } = childProps;\n  return !children && !url && !labelIcon && validItems.some(v => v === label);\n};\n\nconst isCustomPage = (childProps: any): boolean => {\n  const { children, label, url, labelIcon } = childProps;\n  return !!children && !!url && !!labelIcon && !!label;\n};\n\nconst isExternalLink = (childProps: any): boolean => {\n  const { children, label, url, labelIcon } = childProps;\n  return !children && !!url && !!labelIcon && !!label;\n};\n","import React from 'react';\n\nexport const isThatComponent = (v: any, component: React.ReactNode): v is React.ReactNode => {\n  return !!v && React.isValidElement(v) && (v as React.ReactElement)?.type === component;\n};\n","import { logErrorInDevMode } from '@clerk/shared/utils';\nimport type { CustomMenuItem } from '@clerk/types';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { MenuAction, MenuItems, MenuLink, UserProfileLink, UserProfilePage } from '../components/uiComponents';\nimport {\n  customMenuItemsIgnoredComponent,\n  userButtonIgnoredComponent,\n  userButtonMenuItemLinkWrongProps,\n  userButtonMenuItemsActionWrongsProps,\n} from '../errors/messages';\nimport type { UserButtonActionProps, UserButtonLinkProps } from '../types';\nimport { isThatComponent } from './componentValidation';\nimport type { UseCustomElementPortalParams, UseCustomElementPortalReturn } from './useCustomElementPortal';\nimport { useCustomElementPortal } from './useCustomElementPortal';\n\nexport const useUserButtonCustomMenuItems = (children: React.ReactNode | React.ReactNode[]) => {\n  const reorderItemsLabels = ['manageAccount', 'signOut'];\n  return useCustomMenuItems({\n    children,\n    reorderItemsLabels,\n    MenuItemsComponent: MenuItems,\n    MenuActionComponent: MenuAction,\n    MenuLinkComponent: MenuLink,\n    UserProfileLinkComponent: UserProfileLink,\n    UserProfilePageComponent: UserProfilePage,\n  });\n};\n\ntype UseCustomMenuItemsParams = {\n  children: React.ReactNode | React.ReactNode[];\n  MenuItemsComponent?: any;\n  MenuActionComponent?: any;\n  MenuLinkComponent?: any;\n  UserProfileLinkComponent?: any;\n  UserProfilePageComponent?: any;\n  reorderItemsLabels: string[];\n};\n\ntype CustomMenuItemType = UserButtonActionProps | UserButtonLinkProps;\n\nconst useCustomMenuItems = ({\n  children,\n  MenuItemsComponent,\n  MenuActionComponent,\n  MenuLinkComponent,\n  UserProfileLinkComponent,\n  UserProfilePageComponent,\n  reorderItemsLabels,\n}: UseCustomMenuItemsParams) => {\n  const validChildren: CustomMenuItemType[] = [];\n  const customMenuItems: CustomMenuItem[] = [];\n  const customMenuItemsPortals: React.ComponentType[] = [];\n\n  React.Children.forEach(children, child => {\n    if (\n      !isThatComponent(child, MenuItemsComponent) &&\n      !isThatComponent(child, UserProfileLinkComponent) &&\n      !isThatComponent(child, UserProfilePageComponent)\n    ) {\n      if (child) {\n        logErrorInDevMode(userButtonIgnoredComponent);\n      }\n      return;\n    }\n\n    // Ignore UserProfileLinkComponent and UserProfilePageComponent\n    if (isThatComponent(child, UserProfileLinkComponent) || isThatComponent(child, UserProfilePageComponent)) {\n      return;\n    }\n\n    // Menu items children\n    const { props } = child as ReactElement;\n\n    React.Children.forEach(props.children, child => {\n      if (!isThatComponent(child, MenuActionComponent) && !isThatComponent(child, MenuLinkComponent)) {\n        if (child) {\n          logErrorInDevMode(customMenuItemsIgnoredComponent);\n        }\n\n        return;\n      }\n\n      const { props } = child as ReactElement;\n\n      const { label, labelIcon, href, onClick, open } = props;\n\n      if (isThatComponent(child, MenuActionComponent)) {\n        if (isReorderItem(props, reorderItemsLabels)) {\n          // This is a reordering item\n          validChildren.push({ label });\n        } else if (isCustomMenuItem(props)) {\n          const baseItem = {\n            label,\n            labelIcon,\n          };\n\n          if (onClick !== undefined) {\n            validChildren.push({\n              ...baseItem,\n              onClick,\n            });\n          } else if (open !== undefined) {\n            validChildren.push({\n              ...baseItem,\n              open: open.startsWith('/') ? open : `/${open}`,\n            });\n          } else {\n            // Handle the case where neither onClick nor open is defined\n            logErrorInDevMode('Custom menu item must have either onClick or open property');\n            return;\n          }\n        } else {\n          logErrorInDevMode(userButtonMenuItemsActionWrongsProps);\n          return;\n        }\n      }\n\n      if (isThatComponent(child, MenuLinkComponent)) {\n        if (isExternalLink(props)) {\n          validChildren.push({ label, labelIcon, href });\n        } else {\n          logErrorInDevMode(userButtonMenuItemLinkWrongProps);\n          return;\n        }\n      }\n    });\n  });\n\n  const customMenuItemLabelIcons: UseCustomElementPortalParams[] = [];\n  const customLinkLabelIcons: UseCustomElementPortalParams[] = [];\n  validChildren.forEach((mi, index) => {\n    if (isCustomMenuItem(mi)) {\n      customMenuItemLabelIcons.push({ component: mi.labelIcon, id: index });\n    }\n    if (isExternalLink(mi)) {\n      customLinkLabelIcons.push({ component: mi.labelIcon, id: index });\n    }\n  });\n\n  const customMenuItemLabelIconsPortals = useCustomElementPortal(customMenuItemLabelIcons);\n  const customLinkLabelIconsPortals = useCustomElementPortal(customLinkLabelIcons);\n\n  validChildren.forEach((mi, index) => {\n    if (isReorderItem(mi, reorderItemsLabels)) {\n      customMenuItems.push({\n        label: mi.label,\n      });\n    }\n    if (isCustomMenuItem(mi)) {\n      const {\n        portal: iconPortal,\n        mount: mountIcon,\n        unmount: unmountIcon,\n      } = customMenuItemLabelIconsPortals.find(p => p.id === index) as UseCustomElementPortalReturn;\n      const menuItem: CustomMenuItem = {\n        label: mi.label,\n        mountIcon,\n        unmountIcon,\n      };\n\n      if ('onClick' in mi) {\n        menuItem.onClick = mi.onClick;\n      } else if ('open' in mi) {\n        menuItem.open = mi.open;\n      }\n      customMenuItems.push(menuItem);\n      customMenuItemsPortals.push(iconPortal);\n    }\n    if (isExternalLink(mi)) {\n      const {\n        portal: iconPortal,\n        mount: mountIcon,\n        unmount: unmountIcon,\n      } = customLinkLabelIconsPortals.find(p => p.id === index) as UseCustomElementPortalReturn;\n      customMenuItems.push({\n        label: mi.label,\n        href: mi.href,\n        mountIcon,\n        unmountIcon,\n      });\n      customMenuItemsPortals.push(iconPortal);\n    }\n  });\n\n  return { customMenuItems, customMenuItemsPortals };\n};\n\nconst isReorderItem = (childProps: any, validItems: string[]): boolean => {\n  const { children, label, onClick, labelIcon } = childProps;\n  return !children && !onClick && !labelIcon && validItems.some(v => v === label);\n};\n\nconst isCustomMenuItem = (childProps: any): childProps is UserButtonActionProps => {\n  const { label, labelIcon, onClick, open } = childProps;\n  return !!labelIcon && !!label && (typeof onClick === 'function' || typeof open === 'string');\n};\n\nconst isExternalLink = (childProps: any): childProps is UserButtonLinkProps => {\n  const { label, href, labelIcon } = childProps;\n  return !!href && !!labelIcon && !!label;\n};\n","import { useEffect, useRef, useState } from 'react';\n\n/**\n * Used to detect when a Clerk component has been added to the DOM.\n */\nfunction waitForElementChildren(options: { selector?: string; root?: HTMLElement | null; timeout?: number }) {\n  const { root = document?.body, selector, timeout = 0 } = options;\n\n  return new Promise<void>((resolve, reject) => {\n    if (!root) {\n      reject(new Error('No root element provided'));\n      return;\n    }\n\n    let elementToWatch: HTMLElement | null = root;\n    if (selector) {\n      elementToWatch = root?.querySelector(selector);\n    }\n\n    // Check if the element already has child nodes\n    const isElementAlreadyPresent = elementToWatch?.childElementCount && elementToWatch.childElementCount > 0;\n    if (isElementAlreadyPresent) {\n      resolve();\n      return;\n    }\n\n    // Set up a MutationObserver to detect when the element has children\n    const observer = new MutationObserver(mutationsList => {\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'childList') {\n          if (!elementToWatch && selector) {\n            elementToWatch = root?.querySelector(selector);\n          }\n\n          if (elementToWatch?.childElementCount && elementToWatch.childElementCount > 0) {\n            observer.disconnect();\n            resolve();\n            return;\n          }\n        }\n      }\n    });\n\n    observer.observe(root, { childList: true, subtree: true });\n\n    // Set up an optional timeout to reject the promise if the element never gets child nodes\n    if (timeout > 0) {\n      setTimeout(() => {\n        observer.disconnect();\n        reject(new Error(`Timeout waiting for element children`));\n      }, timeout);\n    }\n  });\n}\n\n/**\n * Detect when a Clerk component has mounted by watching DOM updates to an element with a `data-clerk-component=\"${component}\"` property.\n */\nexport function useWaitForComponentMount(component?: string) {\n  const watcherRef = useRef<Promise<void>>();\n  const [status, setStatus] = useState<'rendering' | 'rendered' | 'error'>('rendering');\n\n  useEffect(() => {\n    if (!component) {\n      throw new Error('Clerk: no component name provided, unable to detect mount.');\n    }\n\n    if (typeof window !== 'undefined' && !watcherRef.current) {\n      watcherRef.current = waitForElementChildren({ selector: `[data-clerk-component=\"${component}\"]` })\n        .then(() => {\n          setStatus('rendered');\n        })\n        .catch(() => {\n          setStatus('error');\n        });\n    }\n  }, [component]);\n\n  return status;\n}\n","import { without } from '@clerk/shared/object';\nimport { isDeeplyEqual } from '@clerk/shared/react';\nimport type { PropsWithChildren } from 'react';\nimport React from 'react';\n\nimport type { MountProps, OpenProps } from '../types';\n\nconst isMountProps = (props: any): props is MountProps => {\n  return 'mount' in props;\n};\n\nconst isOpenProps = (props: any): props is OpenProps => {\n  return 'open' in props;\n};\n\nconst stripMenuItemIconHandlers = (\n  menuItems?: Array<{\n    mountIcon?: (el: HTMLDivElement) => void;\n    unmountIcon?: (el: HTMLDivElement) => void;\n    [key: string]: any;\n  }>,\n) => {\n  return menuItems?.map(({ mountIcon, unmountIcon, ...rest }) => rest);\n};\n\n// README: <ClerkHostRenderer/> should be a class pure component in order for mount and unmount\n// lifecycle props to be invoked correctly. Replacing the class component with a\n// functional component wrapped with a React.memo is not identical to the original\n// class implementation due to React intricacies such as the useEffect’s cleanup\n// seems to run AFTER unmount, while componentWillUnmount runs BEFORE.\n\n// More information can be found at https://clerk.slack.com/archives/C015S0BGH8R/p1624891993016300\n\n// The function Portal implementation is commented out for future reference.\n\n// const Portal = React.memo(({ props, mount, unmount }: MountProps) => {\n//   const portalRef = React.createRef<HTMLDivElement>();\n\n//   useEffect(() => {\n//     if (portalRef.current) {\n//       mount(portalRef.current, props);\n//     }\n//     return () => {\n//       if (portalRef.current) {\n//         unmount(portalRef.current);\n//       }\n//     };\n//   }, []);\n\n//   return <div ref={portalRef} />;\n// });\n\n// Portal.displayName = 'ClerkPortal';\n\n/**\n * Used to orchestrate mounting of Clerk components in a host React application.\n * Components are rendered into a specific DOM node using mount/unmount methods provided by the Clerk class.\n */\nexport class ClerkHostRenderer extends React.PureComponent<\n  PropsWithChildren<\n    (MountProps | OpenProps) & {\n      component?: string;\n      hideRootHtmlElement?: boolean;\n      rootProps?: JSX.IntrinsicElements['div'];\n    }\n  >\n> {\n  private rootRef = React.createRef<HTMLDivElement>();\n\n  componentDidUpdate(_prevProps: Readonly<MountProps | OpenProps>) {\n    if (!isMountProps(_prevProps) || !isMountProps(this.props)) {\n      return;\n    }\n\n    // Remove children and customPages from props before comparing\n    // children might hold circular references which deepEqual can't handle\n    // and the implementation of customPages relies on props getting new references\n    const prevProps = without(_prevProps.props, 'customPages', 'customMenuItems', 'children');\n    const newProps = without(this.props.props, 'customPages', 'customMenuItems', 'children');\n\n    // instead, we simply use the length of customPages to determine if it changed or not\n    const customPagesChanged = prevProps.customPages?.length !== newProps.customPages?.length;\n    const customMenuItemsChanged = prevProps.customMenuItems?.length !== newProps.customMenuItems?.length;\n\n    // Strip out mountIcon and unmountIcon handlers since they're always generated as new function references,\n    // which would cause unnecessary re-renders in deep equality checks\n    const prevMenuItemsWithoutHandlers = stripMenuItemIconHandlers(_prevProps.props.customMenuItems);\n    const newMenuItemsWithoutHandlers = stripMenuItemIconHandlers(this.props.props.customMenuItems);\n\n    if (\n      !isDeeplyEqual(prevProps, newProps) ||\n      !isDeeplyEqual(prevMenuItemsWithoutHandlers, newMenuItemsWithoutHandlers) ||\n      customPagesChanged ||\n      customMenuItemsChanged\n    ) {\n      if (this.rootRef.current) {\n        this.props.updateProps({ node: this.rootRef.current, props: this.props.props });\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.rootRef.current) {\n      if (isMountProps(this.props)) {\n        this.props.mount(this.rootRef.current, this.props.props);\n      }\n\n      if (isOpenProps(this.props)) {\n        this.props.open(this.props.props);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.rootRef.current) {\n      if (isMountProps(this.props)) {\n        this.props.unmount(this.rootRef.current);\n      }\n      if (isOpenProps(this.props)) {\n        this.props.close();\n      }\n    }\n  }\n\n  render() {\n    const { hideRootHtmlElement = false } = this.props;\n    const rootAttributes = {\n      ref: this.rootRef,\n      ...this.props.rootProps,\n      ...(this.props.component && { 'data-clerk-component': this.props.component }),\n    };\n\n    return (\n      <>\n        {!hideRootHtmlElement && <div {...rootAttributes} />}\n        {this.props.children}\n      </>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}